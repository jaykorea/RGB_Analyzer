{"version":3,"sources":["components/Classifier/Classifier.js","components/ImageList/Image.js","components/ImageList/ImageList.js","components/Navigation/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["getEth0IPAddress","axios","get","then","response","data","eth0_ip","catch","error","console","log","Classifier","state","files","isLoading","isAnalyzing","recentImage","e_hr","e_min","showMessage","isMultipleimages","showProcessedImage","analyzedInfo","handleEhrChange","event","setState","target","value","handleEminChange","onDrop","length","loadingImage","setTimeout","name","analyzingImage","activateSpinner","deactivateSpinner","handleDisabledClick","sendImage","formData","FormData","append","ipAddress","post","headers","resp","getImageResults","err","object","id","analyzed_info","a","processed_image","responseType","hideProcessedImage","this","map","file","style","display","alignItems","justifyContent","margin","size","accept","isDragActive","getRootProps","getInputProps","className","flexDirection","fontSize","Form","Fragment","marginTop","for","type","placeholder","onChange","min","parseInt","Button","variant","onClick","Alert","Spinner","animation","role","textAlign","analyzed","includes","Number","Math","round","text","styles","buildStyles","textColor","pathColor","trailColor","marginBottom","width","height","border","borderRadius","padding","color","fontStyle","src","alt","rounded","align","Component","Image","props","Card","Img","pict","Body","Title","ImageList","images","visible","newLoaded","status","getImages","handleVisible","new_visible","slice","img","clasName","Navigation","Navbar","bg","Brand","href","Nav","Link","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f9d4594.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport './Classifier.css';\nimport { Alert, Button, Image, Spinner, Form, FormControl, ProgressBar } from 'react-bootstrap';\nimport axios from 'axios'\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\nexport function getIPv4Address(hostname) {\n    let ip = \"\";\n    const pattern = /^\\d+\\.\\d+\\.\\d+\\.\\d+$/;\n    if (hostname.match(pattern)) {\n        ip = hostname;\n    } else {\n        const regex = /(\\d+\\.\\d+\\.\\d+\\.\\d+)/gm;\n        const match = regex.exec(hostname);\n        if (match && match.length > 1) {\n            ip = match[1];\n        }\n    }\n    return ip;\n}\n\nexport function getEth0IPAddress() {\n  return axios.get('/api/get_eth0_ip/')\n    .then(response => {\n      return response.data.eth0_ip; // change 'ip_address' to 'eth0_ip'\n    })\n    .catch(error => {\n      console.log(error);\n    });\n}\n\n\nclass Classifier extends Component {\n    state = {\n        files: [],\n        isLoading: false,\n        isAnalyzing: false,\n        recentImage: null,\n        e_hr: '', // add state variable for e_hr\n        e_min: '', // add state variable for e_min\n        showMessage: false,\n        isMultipleimages: false,\n        showProcessedImage: false,\n        analyzedInfo: null,\n    }\n\n    // event handler for e_hr input field\n    handleEhrChange = (event) => {\n        this.setState({ e_hr: event.target.value });\n    }\n\n    // event handler for e_min input field\n    handleEminChange = (event) => {\n        this.setState({ e_min: event.target.value });\n    }\n\n    onDrop = (files) => {\n        if (files.length > 1) {\n            this.setState({ isMultipleimages: true });\n            return;\n        }\n        this.setState({\n            isLoading: true,\n            files: [],\n            recentImage: null,\n            isMultipleimages: false, // Reset the state when a single image is uploaded\n        })\n        this.loadingImage(files)\n    }\n\n    loadingImage = (files) => {\n        setTimeout(() => {\n            this.setState({\n                files,\n                isLoading: false,\n                showProcessedImage: false\n            }, () => {\n                console.log(this.state.files[0].name)\n            })\n        }, 1000);\n    }\n    analyzingImage = () => {\n        setTimeout(() => {\n            this.setState({\n                isAnalyzing: false\n            }, () => {\n                console.log(this.state.files[0].name)\n            })\n        }, 1000);\n    }\n    activateSpinner = () => {\n        this.setState({\n            isLoading: true,\n            isAnalyzing: true,\n            files: []\n        })\n    }\n\n    deactivateSpinner = () => {\n        this.setState({\n            isLoading: false,\n            isAnalyzing: false,\n        })\n    }\n\n    handleDisabledClick = () => {\n        this.setState({ showMessage: true });\n        // setTimeout(() => {\n        //     this.setState({ showMessage: false });\n        // }, 1000); // Show the message for 3 seconds\n    }\n\n    sendImage = () => {\n      this.setState({\n        isLoading: false,\n        isAnalyzing: true,\n        files: []\n      });\n      let formData = new FormData();\n      formData.append('image', this.state.files[0], this.state.files[0].name);\n      formData.append('e_hr', this.state.e_hr); // add e_hr data to FormData\n      formData.append('e_min', this.state.e_min); // add e_min data to FormData\n      getEth0IPAddress().then(ipAddress => {\n        axios.post(`https://www.zeroexposure1905.com/api/images/`, formData, {\n          headers: {\n            'accept': 'application/json',\n            'content-type': 'multipart/form-data',\n          },\n        })\n          .then(resp => {\n            this.getImageResults(resp);\n            console.log(resp.data);\n          })\n          .catch(err => {\n            console.log('Error Message here: ' + err);\n          });\n      });\n    }\n    \n    getImageResults = (object) => {\n      getEth0IPAddress().then(ipAddress => {\n        axios.get(`https://www.zeroexposure1905.com/api/images/${object.data.id}/`, {\n          headers: {\n            'accept': 'application/json',\n          },\n        })\n          .then(resp => {\n            this.setState({ recentImage: resp, analyzedInfo: resp.data.analyzed_info });\n            console.log(resp);\n          })\n          .catch(err => {\n            console.log('Error Message here: ' + err);\n          });\n        this.deactivateSpinner();\n      });\n    }\n    \n    showProcessedImage = async () => {\n      const ipAddress = await getEth0IPAddress();\n      axios.get(`https://www.zeroexposure1905.com${this.state.recentImage.data.processed_image}`, {\n        headers: {\n          'accept': 'image/png, image/jpeg',\n        },\n        responseType: 'blob',\n      })\n        .then(resp => {\n          this.getImageResults(resp);\n          console.log(resp.data);\n          this.setState({ showProcessedImage: false }); // Add this line to hide the processed image initially\n        })\n        .catch(err => {\n          console.log('Error Message here: ' + err);\n        });\n      this.setState({ showProcessedImage: true });\n    }\n    \n\n    hideProcessedImage = () => {\n        this.setState({ showProcessedImage: false });\n    }\n\n\n\n    render() {\n        // console.log('e_hr :' + this.state.e_hr)\n        // console.log('e_min :' + this.state.e_min)\n        const files = this.state.files.map(file => (\n          <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n            <li key={file.name} style={{ margin: 'auto' }}>\n              {file.name} - {file.size} bytes\n            </li>\n          </div>\n        ));\n\n        return (\n            <Dropzone onDrop={this.onDrop} accept='image/png, image/jpeg'>\n            {({ isDragActive, getRootProps, getInputProps }) => (\n              <section className=\"container\">\n                <div {...getRootProps({ className: 'dropzone back' })} style={{display: 'flex', flexDirection: 'column', justifyContent: 'center',alignItems: 'center'}}>\n                  <input {...getInputProps()} />\n                  <i className=\"far fa-images mb-2 text-muted\" style={{ fontSize: 100 }}></i>\n                  <p className='text-muted'>{isDragActive ? \"Drop some images\" : \"Drag 'n' drop some files here, or click to select files\"}</p>\n                </div>\n                <aside>\n                  {files}\n                </aside>\n                <Form>\n                  {this.state.recentImage ? null : ( // Add this line to conditionally render the Form component\n                    <React.Fragment>\n                      <div className=\"row\" style={{marginTop: '5px'}}>\n                        <label for=\"exposure_hour\" className=\"col-sm-2 col-form-label\">\n                          Exposure Hour\n                        </label>\n                        <div className=\"col-sm-10\">\n                          <input\n                            type=\"number\"\n                            className=\"form-control\"\n                            placeholder=\"Enter the expected exposure time\"\n                            id=\"exposure_hour\"\n                            name=\"e_hr\"\n                            value={this.state.e_hr}\n                            onChange={this.handleEhrChange}\n                            min=\"0\"\n                          ></input>\n                        </div>\n                      </div>\n\n                      <div className=\"row\">\n                        <label for=\"exposure_min\" className=\"col-sm-2 col-form-label\">\n                          Exposure Minute\n                        </label>\n                        <div className=\"col-sm-10\">\n                          <input\n                            type=\"number\"\n                            className=\"form-control\"\n                            placeholder=\"Enter the expected exposure time\"\n                            id=\"exposure_min\"\n                            name=\"e_min\"\n                            value={this.state.e_min}\n                            onChange={this.handleEminChange}\n                            min=\"0\"\n                          ></input>\n                        </div>\n                      </div>\n                    </React.Fragment>\n                  )}\n                </Form>\n                {this.state.files.length > 0 && (\n                  (this.state.e_hr !== \"\" && this.state.e_min !== \"\")  && (parseInt(this.state.e_hr) >= 0 && parseInt(this.state.e_min) >= 0) && (parseInt(this.state.e_hr) !== 0 || parseInt(this.state.e_min) !== 0) ? (\n                    <Button variant=\"info\" size=\"lg\" className=\"mt-3\" onClick={this.sendImage}>Analyze</Button>\n                  ) : (\n                    <Button variant=\"info\" size=\"lg\" className=\"mt-3\" onClick={this.handleDisabledClick}>Analyze</Button>\n                  )\n                )}\n                {this.state.showMessage && (this.state.e_hr === \"\" || this.state.e_min === \"\") &&\n                    <Alert variant='warning' style={{ marginTop: '13px' }}>Please fill in both 'Exposure Hour' and 'Exposure Minute' fields.</Alert>\n                }\n                {this.state.showMessage && (parseInt(this.state.e_hr) === 0 && parseInt(this.state.e_min) === 0) &&\n                    <Alert variant='warning' style={{ marginTop: '13px' }}>At least one of them should be 1 or greater.</Alert>\n                }\n                {this.state.showMessage && (parseInt(this.state.e_hr) < 0 || parseInt(this.state.e_min) < 0) &&\n                    <Alert variant='warning' style={{ marginTop: '13px' }}>Please enter only non-negative values for 'Exposure Hour' and 'Exposure Minute'.</Alert>\n                }\n                {this.state.isMultipleimages &&\n                    <Alert variant='warning' style={{ marginTop: '13px' }}>Please upload only one image at a time.</Alert>\n                }\n                {this.state.isLoading &&\n                    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\n                        <Spinner animation=\"border\" role=\"status\" style={{ marginTop: '50px' }} />\n                        <div style={{ textAlign: 'center', marginTop: '5px' }}>Loading...</div>\n                    </div>\n                }\n                {this.state.isAnalyzing &&\n                    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\n                        <Spinner animation=\"border\" role=\"status\" style={{ marginTop: '50px' }} />\n                        <div style={{ textAlign: 'center', marginTop: '5px' }}>Analyzing...</div>\n                    </div>\n                }\n                {this.state.recentImage &&\n                  <React.Fragment>\n                    {this.state.recentImage.data.analyzed.includes('Failed') && \n                        <Alert variant='warning' style={{ marginTop: '12px'}}>\n                            <div className=\"auto-line-break analyzed-results\">{this.state.recentImage.data.analyzed}</div>\n                        </Alert>\n                    }\n                    {!this.state.recentImage.data.analyzed.includes('Failed') && Number(this.state.recentImage.data.analyzed) <= 100 ? (\n                        <Alert variant='primary' style={{ marginTop: '12px'}}>\n                            <div className=\"auto-line-break analyzed-results\">Ozone exposure level<br></br><b>{Math.round(this.state.recentImage.data.analyzed)}</b> ppb</div>\n                        </Alert>\n                    ) : !this.state.recentImage.data.analyzed.includes('Failed') && (\n                        <Alert variant='danger' style={{ marginTop: '12px'}}>\n                            <div className=\"auto-line-break analyzed-results\">Ozone exposure level<br></br> <b>{Math.round(this.state.recentImage.data.analyzed)}</b> ppb</div>\n                        </Alert>\n                    )}\n                    {!this.state.recentImage.data.analyzed.includes('Failed') && \n                        <div className=\"circular-progress-bar\" style={{marginTop: '13px !important'}}>\n                          <CircularProgressbar\n                            value={Number(this.state.recentImage.data.analyzed)}\n                            text={\n                              Number(this.state.recentImage.data.analyzed) <= 100 ? 'SAFE' : 'DANGER'\n                            }\n                            styles={buildStyles({\n                              fontSize: '14px',\n                              textColor: Number(this.state.recentImage.data.analyzed) <= 100 ? '#007bff' : '#dc3545',\n                              pathColor: Number(this.state.recentImage.data.analyzed) <= 100 ? '#007bff' : '#dc3545',\n                              trailColor: '#f2f2f2',\n                            })}\n                          >\n                          </CircularProgressbar>\n                        </div>\n                    }\n                    <div className=\"image-container\" style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '20px' }}>\n                      {this.state.recentImage && (\n                        <React.Fragment>\n                          {this.state.showProcessedImage ? (\n                            <React.Fragment>                      \n                              <Button style={{ marginTop: '0px', marginBottom: '30px', fontSize: '15px', width: '220px', height: '40px' }} variant=\"primary\" size=\"lg\" className=\"mt-3 mx-auto\" onClick={this.hideProcessedImage}>Hide Processed Image</Button>\n                              <div style={{border: '2px solid #ccc', borderRadius: '4px',padding: '3px',marginTop: '0px', marginBottom: '30px'}}>\n                                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}><b style={{ color: 'gray' ,fontStyle: 'italic'}}>Processed Data</b>\n                                  <Image\n                                    className='justify-content-center'\n                                    src={this.state.recentImage.data.processed_image}\n                                    height='300'\n                                    alt=\"File not Loaded\"\n                                    rounded\n                                    align=\"center\"\n                                    style={{ marginTop: '0px', marginBottom: '7px' }}\n                                  />\n                                  <div className=\"analyzed-info-container\">\n                                      {this.state.analyzedInfo && (\n                                        <div className=\"analyzed-info auto-line-break\" style={{ marginBottom: '0px !important' }}>\n                                          <b style={{ color: 'gray' ,fontStyle: 'italic'}}><p>{this.state.analyzedInfo}</p></b>\n                                        </div>\n                                      )}\n                                  </div>\n                                </div>\n                              </div>\n                            </React.Fragment>\n                          ) : (\n                            <Button style={{ marginTop: '0px', marginBottom: '30px', fontSize: '15px', width: '220px', height: '40px' }} variant=\"primary\" size=\"lg\" className=\"mt-3 mx-auto\" onClick={this.showProcessedImage}>Show Processed Image</Button>\n                          )}\n                        </React.Fragment>\n                      )}\n                    </div>\n                      </React.Fragment>\n                    }\n              </section>\n            )}\n          </Dropzone>\n        );\n      }\n}\n\nexport default Classifier;\n\n\n// This error is caused by running out of the inotify watches limit. You can fix it by increasing the inotify limit.\n\n// You can try running the following command to temporarily increase the limit:\n\n// Copy code\n// sudo sysctl fs.inotify.max_user_watches=524288\n// If this works, you can make the change permanent by adding the following line to the end of the /etc/sysctl.conf file:\n\n// Copy code\n// fs.inotify.max_user_watches=524288\n// Then, save the file and run the following command to apply the changes:\n\n\n// sudo sysctl -p\n// After this, you should be able to run npm start without encountering the ENOSPC error.","import React from 'react';\nimport { Card } from 'react-bootstrap';\n\nconst Image = (props) => {\n    return (\n        <Card style={{ width: '20rem' }} className=\"mx-auto mb-1\">\n            <Card.Img variant=\"top\" src={props.pict} />\n            <Card.Body>\n                <Card.Title>\n                    Analyzed as<br/>\n                </Card.Title>\n                <div className=\"auto-line-break analyzed-results\">{props.name}</div>\n            </Card.Body>\n        </Card>\n    );\n}\nexport default Image;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Image from './Image';\nimport { Button, Spinner } from 'react-bootstrap'\nimport { getEth0IPAddress } from '../Classifier/Classifier.js';\nimport { alignPropType } from 'react-bootstrap/esm/DropdownMenu';\n\nclass ImageList extends Component {\n    state = {\n        images: [],\n        visible: 2,\n        isLoading: true,\n        newLoaded: false,\n        status: false,\n    }\n\n    componentDidMount() {\n        setTimeout(this.getImages, 1000)\n    }\n\n    getImages = () => {\n        getEth0IPAddress().then(ipAddress => {\n            axios.get(`https://www.zeroexposure1905.com/api/images/`, {\n                headers: {\n                    'accept': 'application/json'\n                }\n            }).then(resp => {\n                this.setState({\n                    images: resp.data,\n                    status: true\n                })\n                console.log(resp)\n            })\n            this.setState({ isLoading: false })\n        });\n    }\n    \n    handleVisible = () => {\n        const visible = this.state.visible\n        const new_visible = visible + 2\n        this.setState({ newLoaded: true })\n        setTimeout(() => {\n            this.setState({\n                visible: new_visible,\n                newLoaded: false,\n            })\n        }, 300);\n    }\n\n    render() {\n        const images = this.state.images.slice(0, this.state.visible).map(img => {\n            return <Image key={img.id} pict={img.processed_image} name={img.analyzed}/>\n        })\n        return (\n            <div>\n                <h3> Analysis of images</h3>\n                {(this.state.images.length === 0) && (this.state.status) &&\n                    <h3>No images Analyzed</h3>\n                }\n                {this.state.isLoading ?\n                    <Spinner animation=\"border\" role=\"status\"></Spinner>\n                    :\n                    <React.Fragment>\n                        {images}\n                        {this.state.newLoaded &&\n                            <Spinner animation=\"border\" role=\"status\"></Spinner>}\n                        <br />\n                        {(this.state.images.length > this.state.visible) && (this.state.images.length > 2) &&\n                            <Button clasName=\"mb-5\" variant='primary' size='lg' onClick={this.handleVisible} style={{marginBottom: '20px'}}>Load more</Button>\n                        }\n                        {(this.state.images.length <= this.state.visible) && (this.state.images.length > 0) &&\n                            <p className=\"mb-3\">No more images to load</p>}\n                    </React.Fragment>\n                }\n            </div>\n        );\n    }\n}\n\nexport default ImageList;\n\n\n","import React, { createFactory, useState, useEffect } from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport './Navigation.css';\n\nconst Navigation = () => {\n    return (\n            <Navbar bg=\"dark\" variant=\"dark\" className=\"mb-3\">\n                <Navbar.Brand href=\"/home\">RGB Analyzer</Navbar.Brand>\n                <Nav className=\"me-auto\">\n                    <Nav.Link href=\"/home\">Home</Nav.Link>\n                    <Nav.Link href=\"/list\">Analysis History</Nav.Link>\n                </Nav>\n                <div className=\"license\">\n                    <p>&copy; 2023 jaycho@korea.ac.kr. All rights reserved.</p>\n                </div>\n            </Navbar>\n    );\n}\n\nexport default Navigation;\n","import './App.css';\nimport React from 'react';\nimport Classifier from './components/Classifier/Classifier';\nimport ImageList from './components/ImageList/ImageList';\nimport Navigation from './components/Navigation/Navigation';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Navigation />\n      <div className='App'>\n        <Switch>\n          <Route exact path='/main' component={Classifier} />\n          <Route exact path='/list' component={ImageList} />\n          <Route exact path='*' component={Classifier} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}