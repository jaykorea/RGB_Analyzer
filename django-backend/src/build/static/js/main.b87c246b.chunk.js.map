{"version":3,"sources":["components/GetUrl/GetUrl.js","components/Classifier/Classifier.js","components/ImageList/Image.js","components/ImageList/ImageList.js","components/Navigation/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["getReqUrlAddress","axios","get","then","response","data","req_url","catch","error","console","log","window","process","_objectSpread","Classifier","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","handleResize","dropzoneRef","current","_this$dropzoneRef$cur","getBoundingClientRect","width","height","setState","dropzoneDimensions","handleEhrChange","event","e_hr","target","value","handleEminChange","e_min","onDrop","files","length","isMultipleimages","isLoading","recentImage","previewImage","loadingImage","setTimeout","showProcessedImage","state","name","analyzingImage","isAnalyzing","activateSpinner","deactivateSpinner","handleDisabledClick","showMessage","sendImage","formData","FormData","append","ipAddress","post","concat","headers","resp","getImageResults","err","object","id","analyzedInfo","analyzed_info","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sent","processed_image","responseType","stop","showAQI","calculateLabelPositions","hideAQI","hideProcessedImage","prevZoomLevel","labelPositions","tickLabelPositions","React","createRef","gaugeWrapperRef","_createClass","key","outerWidth","screen","innerWidth","this","rect","centerX","centerY","radius","map","angle","radians","Math","PI","x","cos","y","sin","radius_t","centerX_t","centerY_y","index","labels","_jsx","children","_jsxs","_this2","setInterval","currentZoomLevel","calculateZoomLevel","addEventListener","_this$dropzoneRef$cur2","bind","removeEventListener","ppb","equalSegmentRatio","AQImin","AQImax","Pmin","Pmax","AQI","aqiValue","_this3","imageStyle","maxWidth","maxHeight","objectFit","border","dropzoneStyle","display","justifyContent","alignItems","file","style","margin","size","Fragment","ref","minHeight","marginBottom","className","flexDirection","src","URL","createObjectURL","alt","Dropzone","accept","_ref2","isDragActive","getRootProps","getInputProps","fontSize","Form","marginTop","htmlFor","type","placeholder","onChange","min","parseInt","Button","variant","onClick","Alert","Spinner","animation","role","textAlign","analyzed","includes","CircularProgressbar","Number","text","styles","buildStyles","textColor","pathColor","trailColor","round","GaugeChart","nrOfLevels","colors","arcsLength","percent","getAQIValue","parseFloat","needleColor","needleBaseColor","arcPadding","cornerRadius","arcWidth","marginInPercent","hideText","animate","animDelay","animateDuration","formatTextValue","e_T","aqi","position","left","top","getAQILabel","transform","Component","Image","borderRadius","padding","color","fontStyle","pict","rounded","align","ImageList","_len","arguments","args","Array","_key","apply","images","visible","newLoaded","status","getImages","handleVisible","new_visible","slice","img","clasName","Navigation","Navbar","bg","Brand","href","Nav","Link","App","BrowserRouter","Switch","Route","exact","path","component","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b87c246b.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport function getIPv4Address(hostname) {\n    let ip = \"\";\n    const pattern = /^\\d+\\.\\d+\\.\\d+\\.\\d+$/;\n    if (hostname.match(pattern)) {\n        ip = hostname;\n    } else {\n        const regex = /(\\d+\\.\\d+\\.\\d+\\.\\d+)/gm;\n        const match = regex.exec(hostname);\n        if (match && match.length > 1) {\n            ip = match[1];\n        }\n    }\n    return ip;\n}\n\nexport function getReqUrlAddress() {\n    let local_ip=\"http://127.0.0.1:8001\"\n    return axios.get(`/api/get_req_url/`) // http://127.0.0.1:8001/api/get_req_url/ for local request\n    .then(response => {\n      return response.data.req_url; // change 'ip_address' to 'req_url'\n    })\n    .catch(error => {\n      console.log(error);\n    });\n}\n","import React, { Component, forwardRef, useEffect } from 'react';\nimport Dropzone from 'react-dropzone';\nimport './Classifier.css';\nimport { Alert, Button, Image, Spinner, Form, FormControl, ProgressBar } from 'react-bootstrap';\nimport GaugeChart from 'react-gauge-chart';\nimport axios from 'axios'\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { getReqUrlAddress } from '../GetUrl/GetUrl';\nwindow.process = { ...window.process }\n\nclass Classifier extends Component {\n  \n  constructor(props) {\n    super(props);  \n    this.state = {\n        prevZoomLevel: 1,\n        files: [],\n        isLoading: false,\n        isAnalyzing: false,\n        recentImage: null,\n        previewImage: null,\n        e_hr: '', // add state variable for e_hr\n        e_min: '', // add state variable for e_min\n        showMessage: false,\n        isMultipleimages: false,\n        showProcessedImage: false,\n        showAQI: false,\n        analyzedInfo: null,\n        dropzoneDimensions: {\n          width: 0,\n          height: 0,\n        },\n        labelPositions:[],\n        tickLabelPositions:[],\n      };\n      this.dropzoneRef = React.createRef();\n      this.gaugeWrapperRef = React.createRef();\n    }\n\n    calculateZoomLevel() {\n      const zoomLevel = (window.outerWidth / window.screen.width) * (window.innerWidth / window.outerWidth);\n      return zoomLevel;\n    }\n\n    calculateLabelPositions() {\n      const gaugeWrapperRef = this.gaugeWrapperRef.current;\n      if (!gaugeWrapperRef) return;\n    \n      const rect = gaugeWrapperRef.getBoundingClientRect();\n      const centerX = (rect.width / 2.2) ;\n      const centerY = rect.height * 0.89;\n      const radius = centerX * 0.7; // Adjust this value to match the actual gauge chart radius\n    \n      const angles = [-160, -123, -87, -51, -15];\n      const labelPositions = angles.map((angle) => {\n        const radians = (angle * Math.PI) / 180;\n        const x = centerX + radius * Math.cos(radians);\n        const y = centerY + radius * Math.sin(radians);\n        return { x, y };\n      });\n      const tickAngles = [-179, -144, -108, -72, -35, -1];\n      const tickLabelPositions = tickAngles.map((angle) => {\n        const radius_t = (radius)*1.36;\n        const centerX_t = (centerX)*0.97;\n        const centerY_y = (centerY)*0.44;\n        const radians = (angle * Math.PI) / 180;\n        const x = centerX_t + (radius_t) * Math.cos(radians) ;\n        const y = centerY_y + (radius_t) * Math.sin(radians);\n        return { x, y };\n      });\n    \n      this.setState({ labelPositions, tickLabelPositions });\n    }\n\n    getAQILabel(index) {\n\n      const labels = [\n        <span>Good</span>,\n        <span>Moderate</span>,\n        <span>Unhealthy for<br />Sensitive<br />Groups</span>,\n        <span>Unhealthy</span>,\n        <span>Very<br />Unhealthy</span>\n      ];\n\n      switch (index) {\n        case 0:\n          return labels[0];\n        case 1:\n          return labels[1];\n        case 2:\n          return labels[2];\n        case 3:\n          return labels[3];\n        case 4:\n          return labels[4];\n        default:\n          return 'None';\n      }\n    }\n\n    getAQILabelIndex(index) {\n\n      const labels = [\n        '0',\n        '50',\n        '100',\n        '150',\n        '200',\n        '300',\n      ];\n      switch (index) {\n        case 0:\n          return labels[0];\n        case 1:\n          return labels[1];\n        case 2:\n          return labels[2];\n        case 3:\n          return labels[3];\n        case 4:\n          return labels[4];\n        default:\n          return 'None';\n      }\n    }\n    \n    componentDidMount() {\n      // Set up an interval to check for zoom level changes\n      setInterval(() => {\n        const currentZoomLevel = this.calculateZoomLevel();\n        if (currentZoomLevel !== this.state.prevZoomLevel) {\n          this.calculateLabelPositions();\n          this.setState({ prevZoomLevel: currentZoomLevel });\n        }\n      }, 50); // Check every 500ms\n\n      // Add a resize event listener to the window\n      window.addEventListener('resize', this.handleResize);\n      // Get the initial dimensions of the dropzone\n      const { width, height } = this.dropzoneRef.current.getBoundingClientRect();\n      // Get the initial label positions\n      this.calculateLabelPositions();\n      window.addEventListener('resize', this.calculateLabelPositions.bind(this));\n\n      this.setState({ dropzoneDimensions: { width, height } });\n    }\n  \n    componentWillUnmount() {\n      // Remove the resize event listener when the component unmounts\n      window.removeEventListener('resize', this.handleResize);\n      // Remove the resize event listener when the component unmounts\n      window.removeEventListener('resize', this.calculateLabelPositions.bind(this));\n    }\n  \n    handleResize = () => {\n      // Update the dimensions of the dropzone when the window resizes\n      if (this.dropzoneRef.current) {\n        const { width, height } = this.dropzoneRef.current.getBoundingClientRect();\n        this.setState({ dropzoneDimensions: { width, height } });\n      }\n    };\n\n    // event handler for e_hr input field\n    handleEhrChange = (event) => {\n        this.setState({ e_hr: event.target.value });\n    }\n\n    // event handler for e_min input field\n    handleEminChange = (event) => {\n        this.setState({ e_min: event.target.value });\n    }\n\n    onDrop = (files) => {\n        if (files.length > 1) {\n            this.setState({ isMultipleimages: true });\n            return;\n        }\n        this.setState({\n            isLoading: true,\n            files: [],\n            recentImage: null,\n            previewImage: files[0],\n            isMultipleimages: false, // Reset the state when a single image is uploaded\n        })\n        this.loadingImage(files)\n    }\n\n    loadingImage = (files) => {\n        setTimeout(() => {\n            this.setState({\n                files,\n                isLoading: false,\n                showProcessedImage: false\n            }, () => {\n                console.log(this.state.files[0].name)\n            })\n        }, 1000);\n    }\n    analyzingImage = () => {\n        setTimeout(() => {\n            this.setState({\n                isAnalyzing: false\n            }, () => {\n                console.log(this.state.files[0].name)\n            })\n        }, 1000);\n    }\n    activateSpinner = () => {\n        this.setState({\n            isLoading: true,\n            isAnalyzing: true,\n            files: []\n        })\n    }\n\n    deactivateSpinner = () => {\n        this.setState({\n            isLoading: false,\n            isAnalyzing: false,\n        })\n    }\n\n    handleDisabledClick = () => {\n        this.setState({ showMessage: true });\n        // setTimeout(() => {\n        //     this.setState({ showMessage: false });\n        // }, 1000); // Show the message for 3 seconds\n    }\n\n    sendImage = () => {\n      this.setState({\n        isLoading: false,\n        isAnalyzing: true,\n        files: []\n      });\n      let formData = new FormData();\n      formData.append('image', this.state.files[0], this.state.files[0].name);\n      formData.append('e_hr', this.state.e_hr); // add e_hr data to FormData\n      formData.append('e_min', this.state.e_min); // add e_min data to FormData\n      getReqUrlAddress().then(ipAddress => {\n        axios.post(`${ipAddress}/api/images/`, formData, {\n          headers: {\n            'accept': 'application/json',\n            'content-type': 'multipart/form-data',\n          },\n        })\n          .then(resp => {\n            this.getImageResults(resp);\n            console.log(resp.data);\n          })\n          .catch(err => {\n            console.log('Error Message here: ' + err);\n          });\n      });\n    }\n    \n    getImageResults = (object) => {\n      getReqUrlAddress().then(ipAddress => {\n        axios.get(`${ipAddress}/api/images/${object.data.id}/`, {\n          headers: {\n            'accept': 'application/json',\n          },\n        })\n          .then(resp => {\n            this.setState({ recentImage: resp, analyzedInfo: resp.data.analyzed_info });\n            console.log(resp);\n          })\n          .catch(err => {\n            console.log('Error Message here: ' + err);\n          });\n        this.deactivateSpinner();\n      });\n    }\n    \n    showProcessedImage = async () => {\n      const ipAddress = await getReqUrlAddress();\n      axios.get(`${ipAddress}${this.state.recentImage.data.processed_image}`, {\n        headers: {\n          'accept': 'image/png, image/jpeg',\n        },\n        responseType: 'blob',\n      })\n        .then(resp => {\n          this.getImageResults(resp);\n          console.log(resp.data);\n          this.setState({ showProcessedImage: false }); // Add this line to hide the processed image initially\n        })\n        .catch(err => {\n          console.log('Error Message here: ' + err);\n        });\n      this.setState({ showProcessedImage: true });\n    }\n\n    showAQI = () => {\n      this.setState({ showAQI: true });\n      setTimeout(() => {\n        this.calculateLabelPositions();\n      }, 1);\n  }\n   \n    hideAQI = () => {\n      this.setState({ showAQI: false });\n  }\n\n    hideProcessedImage = () => {\n        this.setState({ showProcessedImage: false });\n    }\n\n    getAQIValue(ppb) {\n      const equalSegmentRatio = 1 / 5; // 0.166\n      let AQImin = 0;\n      let AQImax = 0;\n      let Pmin = 0;\n      let Pmax = 0;\n\n      if (ppb > 0 && ppb <= 54)\n        {\n          AQImin = 0;\n          AQImax = 50\n          Pmin = 0;\n          Pmax = 54;\n        }\n      else if (ppb > 54 && ppb <= 70)\n        {\n          AQImin = 51;\n          AQImax = 100;\n          Pmin = 55;\n          Pmax = 70;\n        }\n      else if (ppb > 70 && ppb <= 85)\n        {\n          AQImin = 101;\n          AQImax = 150;\n          Pmin = 71;\n          Pmax = 85;\n        }\n      else if (ppb > 85 && ppb <= 105)\n        {\n          AQImin = 151;\n          AQImax = 200;\n          Pmin = 86;\n          Pmax = 105;\n        }\n      else \n        {\n          AQImin = 201;\n          AQImax = 300;\n          Pmin = 106;\n          Pmax = 200;\n        }\n\n      const AQI = (((ppb-Pmin)*(AQImax - AQImin))/(Pmax-Pmin))+AQImin;\n      console.log(\"AQI value:\", AQI);\n\n      if (AQI <= 50) {\n        return AQI / 50 * equalSegmentRatio;\n      } else if (AQI <= 100) {\n        return equalSegmentRatio + (AQI - 50) / 50 * equalSegmentRatio;\n      } else if (AQI <= 150) {\n        return equalSegmentRatio * 2 + (AQI - 100) / 50 * equalSegmentRatio;\n      } else if (AQI <= 200) {\n        return equalSegmentRatio * 3.1 + (AQI - 150) / 50 * equalSegmentRatio;\n      } else if (AQI <= 300) {\n        return equalSegmentRatio * 4.1 + (AQI - 200) / 100 * equalSegmentRatio;\n      } else {\n        //console.log(equalSegmentRatio * 5 + (AQI - 200) / 95 * equalSegmentRatio);\n        return 0.9934896074258042;\n      }\n    }\n\n    getAQIPercent(aqiValue) {\n      const equalSegmentRatio = 1 / 5; // 0.166\n    \n      if (aqiValue <= 50) {\n        return aqiValue / 50 * equalSegmentRatio;\n      } else if (aqiValue <= 100) {\n        return equalSegmentRatio + (aqiValue - 50) / 50 * equalSegmentRatio;\n      } else if (aqiValue <= 150) {\n        return equalSegmentRatio * 2 + (aqiValue - 100) / 50 * equalSegmentRatio;\n      } else if (aqiValue <= 200) {\n        return equalSegmentRatio * 3 + (aqiValue - 150) / 50 * equalSegmentRatio;\n      } else if (aqiValue <= 300) {\n        return equalSegmentRatio * 4 + (aqiValue - 200) / 100 * equalSegmentRatio;\n      } else {\n        //console.log(equalSegmentRatio * 5 + (aqiValue - 200) / 95 * equalSegmentRatio);\n        return 0.9934896074258042;\n        //return equalSegmentRatio * 5 + (aqiValue - 200) / 95 * equalSegmentRatio;\n      }\n    }\n\n    render() {\n      const { dropzoneDimensions } = this.state;\n      let imageBoxStyle = {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: '330px',\n        marginBottom: '15px',\n      };\n      let imageStyle = {\n        maxWidth: `${dropzoneDimensions.width * 0.99}px`,\n        maxHeight: `${dropzoneDimensions.height * 0.9}px`,\n        objectFit: 'contain',\n        border: '1px dashed #ccc',\n      };\n      let dropzoneStyle = {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: `${dropzoneDimensions.width}px`,\n        maxHeight: '330px', // set a max-height here\n      };\n    \n      const files = this.state.files.map((file) => (\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n          <li key={file.name} style={{ margin: 'auto' }}>\n            {file.name} - {file.size} bytes\n          </li>\n        </div>\n      ));\n      \n      return (\n    <React.Fragment>\n      {this.state.recentImage === null && (\n        <div ref={this.dropzoneRef} style={imageBoxStyle}>\n          <div className=\"image-preview\" style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n            {this.state.previewImage ? (\n              <img src={URL.createObjectURL(this.state.previewImage)} alt=\"\" style={imageStyle} />\n            ) : (\n              <Dropzone onDrop={this.onDrop} accept=\"image/png, image/jpeg\">\n                {({ isDragActive, getRootProps, getInputProps }) => (\n                  <div {...getRootProps({ className: 'dropzone back' })} style={{ ...dropzoneStyle, display: 'flex', justifyContent: 'center', flexDirection: 'column', alignItems: 'center' }}>\n                    <input {...getInputProps()} />\n                    <i className=\"fa fa-cloud-upload fa-4x text-muted\" style={{ fontSize: 120 }}></i>\n                    <p className=\"text-muted\">{isDragActive ? 'Drop some images' : \"Drag 'n' drop some files here, or click to select files\"}</p>\n                  </div>\n                )}\n              </Dropzone>\n            )}\n          </div>\n        </div>\n      )}\n              <Form>\n                {this.state.recentImage ? null : (\n                  <React.Fragment>\n                <div className=\"row justify-content-center\" style={{ marginTop: '5px' }}>\n                  <label htmlFor=\"exposure_time\" className=\"col-form-label\">\n                    Exposure Time:\n                  </label>\n                <div className=\"col-sm-2 col-md-4\">\n                  <input\n                    type=\"number\"\n                    className=\"form-control\"\n                    placeholder=\"\"\n                    id=\"exposure_hour\"\n                    name=\"e_hr\"\n                    value={this.state.e_hr}\n                    onChange={this.handleEhrChange}\n                    min=\"0\"\n                    style={{ width: '100%' }}\n                  />\n                </div>\n                <label htmlFor=\"exposure_hour\" className=\"col-form-label\">\n                  hr\n                </label>\n                <div className=\"col-sm-2 col-md-4\">\n                  <input\n                    type=\"number\"\n                    className=\"form-control\"\n                    placeholder=\"\"\n                    id=\"exposure_min\"\n                    name=\"e_min\"\n                    value={this.state.e_min}\n                    onChange={this.handleEminChange}\n                    min=\"0\"\n                    style={{ width: '100%' }}\n                  />\n                </div>\n                <label htmlFor=\"exposure_min\" className=\"col-form-label\" >\n                  min\n                </label>\n              </div>\n                  </React.Fragment>\n                )}\n              </Form>\n                {this.state.files.length > 0 && (\n                  (this.state.e_hr !== \"\" && this.state.e_min !== \"\")  && (parseInt(this.state.e_hr) >= 0 && parseInt(this.state.e_min) >= 0) && (parseInt(this.state.e_hr) !== 0 || parseInt(this.state.e_min) !== 0) ? (\n                    <Button variant=\"info\" size=\"lg\" className=\"analyze-button\" onClick={this.sendImage}>Analyze</Button>\n                  ) : (\n                    <Button variant=\"info\" size=\"lg\" className=\"analyze-button\" onClick={this.handleDisabledClick}>Analyze</Button>\n                  )\n                )}\n                {this.state.showMessage && (this.state.e_hr === \"\" || this.state.e_min === \"\") &&\n                    <Alert variant='warning' style={{ marginTop: '13px' }}>Please fill in both 'Exposure Hour' and 'Exposure Minute' fields.</Alert>\n                }\n                {this.state.showMessage && (parseInt(this.state.e_hr) === 0 && parseInt(this.state.e_min) === 0) &&\n                    <Alert variant='warning' style={{ marginTop: '13px' }}>At least one of them should be 1 or greater.</Alert>\n                }\n                {this.state.showMessage && (parseInt(this.state.e_hr) < 0 || parseInt(this.state.e_min) < 0) &&\n                    <Alert variant='warning' style={{ marginTop: '13px' }}>Please enter only non-negative values for 'Exposure Hour' and 'Exposure Minute'.</Alert>\n                }\n                {this.state.isMultipleimages &&\n                    <Alert variant='warning' style={{ marginTop: '13px' }}>Please upload only one image at a time.</Alert>\n                }\n                {this.state.isLoading &&\n                    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\n                        <Spinner animation=\"border\" role=\"status\" style={{ marginTop: '50px' }} />\n                        <div style={{ textAlign: 'center', marginTop: '5px' }}>Loading...</div>\n                    </div>\n                }\n                {this.state.isAnalyzing &&\n                    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\n                        <Spinner animation=\"border\" role=\"status\" style={{ marginTop: '50px' }} />\n                        <div style={{ textAlign: 'center', marginTop: '5px' }}>Analyzing...</div>\n                    </div>\n                }\n                {this.state.recentImage &&\n                  <React.Fragment>\n                    {!this.state.recentImage.data.analyzed.includes('Failed') && \n                      <div className=\"circular-progress-container\">\n                        <div className=\"circular-progress-bar\" style={{marginTop: '13px !important'}}>\n                          <CircularProgressbar\n                            value={Number(this.state.recentImage.data.analyzed)}\n                            text={\n                              Number(this.state.recentImage.data.analyzed) < 100.0 ? 'SAFE' : 'DANGER'\n                            }\n                            styles={buildStyles({\n                              fontSize: '14px',\n                              textColor: Number(this.state.recentImage.data.analyzed) < 100.0 ? '#007bff' : '#dc3545',\n                              pathColor: Number(this.state.recentImage.data.analyzed) < 100.0 ? '#007bff' : '#dc3545',\n                              trailColor: '#f2f2f2',\n                            })}\n                          >\n                          </CircularProgressbar>\n                        </div>\n                      </div>\n                    }\n                    {this.state.recentImage.data.analyzed.includes('Failed') && \n                        <Alert variant='warning' style={{ marginTop: '50px'}}>\n                            <div className=\"auto-line-break analyzed-results\">{this.state.recentImage.data.analyzed}</div>\n                        </Alert>\n                    }\n                    {!this.state.recentImage.data.analyzed.includes('Failed') && Number(this.state.recentImage.data.analyzed) < 100.0 ? (\n                        <Alert variant='primary' className=\"custom-alert\" style={{ marginTop: '40px'}}>\n                            <div className=\"auto-line-break analyzed-results\">Ozone exposure level<br></br><b>{Math.round(this.state.recentImage.data.analyzed)}</b> ppb</div>\n                        </Alert>\n                    ) : !this.state.recentImage.data.analyzed.includes('Failed') && (\n                        <Alert variant='danger' className=\"custom-alert\" style={{ marginTop: '40px'}}>\n                            <div className=\"auto-line-break analyzed-results\">Ozone exposure level<br></br> <b>{Math.round(this.state.recentImage.data.analyzed)}</b> ppb</div>\n                        </Alert>\n                    )}\n                     {this.state.recentImage && (\n                        <React.Fragment>\n                          {this.state.showAQI ? (\n                            <React.Fragment>                      \n                              <Button style={{ marginTop: '0px', marginBottom: '50px', fontSize: '15px', width: '150px', height: '40px' }} variant=\"primary\" size=\"lg\" className=\"mt-3 mx-auto\" onClick={this.hideAQI}>AQI</Button>\n                              <div ref={this.gaugeWrapperRef}>\n                              <div className=\"aqi-gauge-container\" style={{marginBottom: '40px'}}> \n                              <GaugeChart\n                                id=\"gauge-chart\"\n                                nrOfLevels={6}\n                                colors={['#00FF00', '#FFFF00', '#FFA500', '#FF4500', '#B70000']}\n                                arcsLength={[0.2, 0.2, 0.2, 0.2, 0.2]}\n                                //percent={this.getAQIPercent(Number.parseFloat(this.state.recentImage.data.analyzed)/(8.0/(Number.parseFloat(this.state.e_hr)+(Number.parseFloat(this.state.e_min)*0.0166667))))}\n                                percent={this.getAQIValue(Number.parseFloat(this.state.recentImage.data.analyzed))}\n                                textColor=\"#000000\"\n                                needleColor=\"#d7d7d7\"\n                                needleBaseColor=\"#d7d7d7\"\n                                arcPadding={0.01}\n                                cornerRadius={0.5}\n                                arcWidth={0.35}\n                                marginInPercent={0.035}\n                                hideText={true}\n                                animate={false}\n                                animDelay={500}\n                                animateDuration={1000}\n                                formatTextValue={(value) => {\n                                  console.log('Received value:', value);\n                                  const e_T = Number.parseFloat(this.state.e_hr)+(Number.parseFloat(this.state.e_min)*0.0166667);\n                                  const ppb = (Number.parseFloat(this.state.recentImage.data.analyzed)/(8.0/e_T));\n                                  const aqi = (Number.parseFloat(this.state.recentImage.data.analyzed)/(8.0/e_T));\n                                  if (aqi > 0 && aqi <= 50) return 'Good';\n                                  else if (aqi > 50 && aqi <= 100) return 'Moderate';\n                                  else if (aqi > 100 && aqi <= 150) return 'Unhealthy for Sensitive Groups';\n                                  else if (aqi > 150 && aqi <= 200) return 'Unhealthy';\n                                  else if (aqi > 200 && aqi <= 300) return 'Very Unhealthy';\n                                  else return 'None';\n                                }}\n                              />\n                                <div className=\"aqi-gauge-labels\">\n                                  {this.state.labelPositions.map((position, index) => (\n                                    <div\n                                      key={index}\n                                      className={`aqi-gauge-label aqi-gauge-label-${index}`}\n                                      style={{\n                                        position: 'absolute',\n                                        left: position.x,\n                                        top: position.y,\n                                      }}\n                                    >\n                                      <span>{this.getAQILabel(index)}</span>\n                                    </div>\n                                  ))}\n                                </div>\n                                <div className=\"aqi-gauge-labels\">\n                                  {this.state.tickLabelPositions.map((position, index) => (\n                                    <div\n                                      key={index}\n                                      className={`aqi-gauge-tick-label aqi-gauge-tick-label-${index}`}\n                                      style={{\n                                        transform: `translate(${position.x}px, ${position.y}px)`,\n                                      }}\n                                    >\n                                      <span>{[0, 50, 100, 150, 200, 300][index]}</span>\n                                    </div>\n                                  ))}\n                                </div>\n                              </div>\n                            </div>\n                            </React.Fragment>\n                          ) : (\n                            <Button style={{ marginTop: '0px', marginBottom: '50px', fontSize: '15px', width: '150px', height: '40px' }} variant=\"primary\" size=\"lg\" className=\"mt-3 mx-auto\" onClick={this.showAQI}>AQI</Button>\n                          )}\n                        </React.Fragment>\n                      )}\n                      \n                  </React.Fragment>\n                    }\n          </React.Fragment>\n        );\n      }\n}\n\nexport default Classifier;\n\n// Number(this.state.recentImage.data.analyzed) <- PPB * (T/8)\n// <div className=\"image-container\" style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '20px' }}>\n// {this.state.recentImage && (\n//   <React.Fragment>\n//     {this.state.showProcessedImage ? (\n//       <React.Fragment>                      \n//         <Button style={{ marginTop: '0px', marginBottom: '30px', fontSize: '15px', width: '220px', height: '40px' }} variant=\"primary\" size=\"lg\" className=\"mt-3 mx-auto\" onClick={this.hideProcessedImage}>Hide Processed Image</Button>\n//         <div style={{border: '2px solid #ccc', borderRadius: '4px',padding: '3px',marginTop: '0px', marginBottom: '30px'}}>\n//           <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}><b style={{ color: 'gray' ,fontStyle: 'italic'}}>Processed Data</b>\n//             <Image\n//               className='justify-content-center'\n//               src={this.state.recentImage.data.processed_image}\n//               height='300'\n//               alt=\"File not Loaded\"\n//               rounded\n//               align=\"center\"\n//               style={{ marginTop: '0px', marginBottom: '7px' }}\n//             />\n//             <div className=\"analyzed-info-container\">\n//                 {this.state.analyzedInfo && (\n//                   <div className=\"analyzed-info auto-line-break\" style={{ marginBottom: '0px !important' }}>\n//                     <b style={{ color: 'gray' ,fontStyle: 'italic'}}><p>{this.state.analyzedInfo}</p></b>\n//                   </div>\n//                 )}\n//             </div>\n//           </div>\n//         </div>\n//       </React.Fragment>\n//     ) : (\n//       <Button style={{ marginTop: '0px', marginBottom: '30px', fontSize: '15px', width: '220px', height: '40px' }} variant=\"primary\" size=\"lg\" className=\"mt-3 mx-auto\" onClick={this.showProcessedImage}>Show Processed Image</Button>\n//     )}\n//   </React.Fragment>\n// )}\n// </div> \n// show process image part\n\n// This error is caused by running out of the inotify watches limit. You can fix it by increasing the inotify limit.\n\n// You can try running the following command to temporarily increase the limit:\n\n// Copy code\n// sudo sysctl fs.inotify.max_user_watches=524288\n// If this works, you can make the change permanent by adding the following line to the end of the /etc/sysctl.conf file:\n\n// Copy code\n// fs.inotify.max_user_watches=524288\n// Then, save the file and run the following command to apply the changes:\n\n\n// sudo sysctl -p\n// After this, you should be able to run npm start without encountering the ENOSPC error.","import React from 'react';\n\nconst Image = (props) => {\n    return (\n        <div className=\"image-container\" style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '10px' }}>\n            <div style={{border: '2px solid #ccc', borderRadius: '4px',padding: '3px',marginTop: '0px', marginBottom: '3px'}}>\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                    <b style={{ color: 'gray' ,fontStyle: 'italic'}}>Processed  Image Data #{props.id}</b>\n                    <img\n                        className='justify-content-center'\n                        src={props.pict}\n                        height='300'\n                        rounded\n                        align=\"center\"\n                        style={{ marginTop: '0px', marginBottom: '7px' }}\n                    />\n                    <div className=\"analyzed-info-container\">\n                        {props.analyzedInfo && (\n                            <div className=\"analyzed-info auto-line-break\" style={{ marginBottom: '0px !important' }}>\n                                <b style={{ color: 'gray' ,fontStyle: 'italic'}}><p>{props.analyzedInfo}</p></b>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default Image;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Image from './Image';\nimport { Button, Spinner } from 'react-bootstrap'\nimport { getReqUrlAddress } from '../GetUrl/GetUrl.js';\nimport { alignPropType } from 'react-bootstrap/esm/DropdownMenu';\n\nclass ImageList extends Component {\n    state = {\n        images: [],\n        visible: 2,\n        isLoading: true,\n        newLoaded: false,\n        status: false,\n    }\n\n    componentDidMount() {\n        setTimeout(this.getImages, 1000)\n    }\n\n    getImages = () => {\n        getReqUrlAddress().then(ipAddress => {\n            axios.get(`${ipAddress}/api/images/`, {\n                headers: {\n                    'accept': 'application/json'\n                }\n            }).then(resp => {\n                this.setState({\n                    images: resp.data,\n                    analyzedInfo: resp.data.analyzed_info,\n                    status: true\n                })\n                console.log(resp)\n            })\n            this.setState({ isLoading: false })\n        });\n    }\n    \n    handleVisible = () => {\n        const visible = this.state.visible\n        const new_visible = visible + 2\n        this.setState({ newLoaded: true })\n        setTimeout(() => {\n            this.setState({\n                visible: new_visible,\n                newLoaded: false,\n            })\n        }, 300);\n    }\n\n    render() {\n        const images = this.state.images.slice(0, this.state.visible).map((img, index) => {\n            return <Image key={img.id} pict={img.processed_image} name={img.analyzed} analyzedInfo={img.analyzed_info} id={index + 1} />\n        });\n\n\n        return (\n            <div>\n                <h3> Analysis of images</h3>\n                {(this.state.images.length === 0) && (this.state.status) &&\n                    <h3>No images Analyzed</h3>\n                }\n                {this.state.isLoading ?\n                    <Spinner animation=\"border\" role=\"status\"></Spinner>\n                    :\n                    <React.Fragment>\n                        {images}\n                        {this.state.newLoaded &&\n                            <Spinner animation=\"border\" role=\"status\"></Spinner>}\n                        <br />\n                        {(this.state.images.length > this.state.visible) && (this.state.images.length > 2) &&\n                            <Button clasName=\"mb-5\" variant='primary' size='lg' onClick={this.handleVisible} style={{marginBottom: '20px'}}>Load more</Button>\n                        }\n                        {(this.state.images.length <= this.state.visible) && (this.state.images.length > 0) &&\n                            <p className=\"mb-3\">No more images to load</p>}\n                    </React.Fragment>\n                }\n            </div>\n        );\n    }\n}\n\nexport default ImageList;\n\n\n\n","import React, { createFactory, useState, useEffect } from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport './Navigation.css';\n\nconst Navigation = () => {\n    return (\n            <Navbar bg=\"dark\" variant=\"dark\" className=\"mb-3\">\n                <Navbar.Brand href=\"/home\">RGB Analyzer</Navbar.Brand>\n                <Nav className=\"me-auto\">\n                    <Nav.Link href=\"/home\">Home</Nav.Link>\n                    <Nav.Link href=\"/list\">Analysis History</Nav.Link>\n                </Nav>\n                <div className=\"license\">\n                    <p>&copy; 2023 jaycho@korea.ac.kr. All rights reserved.</p>\n                </div>\n            </Navbar>\n    );\n}\n\nexport default Navigation;\n","import './App.css';\nimport React from 'react';\nimport Classifier from './components/Classifier/Classifier';\nimport ImageList from './components/ImageList/ImageList';\nimport Navigation from './components/Navigation/Navigation';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Navigation />\n      <div className='App'>\n        <Switch>\n          <Route exact path='/main' component={Classifier} />\n          <Route exact path='/list' component={ImageList} />\n          <Route exact path='*' component={Classifier} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}