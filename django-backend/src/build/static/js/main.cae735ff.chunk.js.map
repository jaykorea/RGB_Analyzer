{"version":3,"sources":["components/GetUrl/GetUrl.js","components/Classifier/Classifier.js","components/ImageList/Image.js","components/ImageList/ImageList.js","components/Navigation/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["getReqUrlAddress","axios","get","then","response","data","req_url","catch","error","console","log","Classifier","props","handleEhrChange","event","setState","e_hr","target","value","handleEminChange","e_min","onDrop","files","length","isMultipleimages","isLoading","recentImage","previewImage","loadingImage","setTimeout","showProcessedImage","state","name","analyzingImage","isAnalyzing","activateSpinner","deactivateSpinner","handleDisabledClick","showMessage","sendImage","formData","FormData","append","ipAddress","post","headers","resp","getImageResults","err","object","id","analyzedInfo","analyzed_info","a","processed_image","responseType","hideProcessedImage","dropzoneDimensions","width","height","dropzoneRef","React","createRef","this","current","getBoundingClientRect","imageStyle","maxWidth","maxHeight","objectFit","map","file","style","display","alignItems","justifyContent","margin","size","Fragment","ref","border","className","flexDirection","src","URL","createObjectURL","alt","accept","isDragActive","getRootProps","getInputProps","fontSize","htmlFor","Form","marginTop","type","placeholder","onChange","min","parseInt","Button","variant","onClick","Alert","Spinner","animation","role","textAlign","analyzed","includes","Number","Math","round","text","styles","buildStyles","textColor","pathColor","trailColor","Component","Image","borderRadius","padding","marginBottom","color","fontStyle","pict","rounded","align","ImageList","images","visible","newLoaded","status","getImages","handleVisible","new_visible","slice","img","index","clasName","Navigation","Navbar","bg","Brand","href","Nav","Link","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cae735ff.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport function getIPv4Address(hostname) {\n    let ip = \"\";\n    const pattern = /^\\d+\\.\\d+\\.\\d+\\.\\d+$/;\n    if (hostname.match(pattern)) {\n        ip = hostname;\n    } else {\n        const regex = /(\\d+\\.\\d+\\.\\d+\\.\\d+)/gm;\n        const match = regex.exec(hostname);\n        if (match && match.length > 1) {\n            ip = match[1];\n        }\n    }\n    return ip;\n}\n\nexport function getReqUrlAddress() {\n    return axios.get('http://127.0.0.1:8001/api/get_req_url/')\n    .then(response => {\n      return response.data.req_url; // change 'ip_address' to 'req_url'\n    })\n    .catch(error => {\n      console.log(error);\n    });\n}\n","import React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport './Classifier.css';\nimport { Alert, Button, Image, Spinner, Form, FormControl, ProgressBar } from 'react-bootstrap';\nimport axios from 'axios'\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { getReqUrlAddress } from '../GetUrl/GetUrl';\n\nclass Classifier extends Component {\n  constructor(props) {\n    super(props);  \n    this.state = {\n        files: [],\n        isLoading: false,\n        isAnalyzing: false,\n        recentImage: null,\n        previewImage: null,\n        e_hr: '', // add state variable for e_hr\n        e_min: '', // add state variable for e_min\n        showMessage: false,\n        isMultipleimages: false,\n        showProcessedImage: false,\n        analyzedInfo: null,\n        dropzoneDimensions: {\n          width: 0,\n          height: 0,\n        },\n      };\n      this.dropzoneRef = React.createRef();\n    }\n    componentDidMount() {\n      // Update the dimensions of the dropzone box\n      const { width, height } = this.dropzoneRef.current.getBoundingClientRect();\n      this.setState({ dropzoneDimensions: { width, height } });\n    }\n    // event handler for e_hr input field\n    handleEhrChange = (event) => {\n        this.setState({ e_hr: event.target.value });\n    }\n\n    // event handler for e_min input field\n    handleEminChange = (event) => {\n        this.setState({ e_min: event.target.value });\n    }\n\n    onDrop = (files) => {\n        if (files.length > 1) {\n            this.setState({ isMultipleimages: true });\n            return;\n        }\n        this.setState({\n            isLoading: true,\n            files: [],\n            recentImage: null,\n            previewImage: files[0],\n            isMultipleimages: false, // Reset the state when a single image is uploaded\n        })\n        this.loadingImage(files)\n    }\n\n    loadingImage = (files) => {\n        setTimeout(() => {\n            this.setState({\n                files,\n                isLoading: false,\n                showProcessedImage: false\n            }, () => {\n                console.log(this.state.files[0].name)\n            })\n        }, 1000);\n    }\n    analyzingImage = () => {\n        setTimeout(() => {\n            this.setState({\n                isAnalyzing: false\n            }, () => {\n                console.log(this.state.files[0].name)\n            })\n        }, 1000);\n    }\n    activateSpinner = () => {\n        this.setState({\n            isLoading: true,\n            isAnalyzing: true,\n            files: []\n        })\n    }\n\n    deactivateSpinner = () => {\n        this.setState({\n            isLoading: false,\n            isAnalyzing: false,\n        })\n    }\n\n    handleDisabledClick = () => {\n        this.setState({ showMessage: true });\n        // setTimeout(() => {\n        //     this.setState({ showMessage: false });\n        // }, 1000); // Show the message for 3 seconds\n    }\n\n    sendImage = () => {\n      this.setState({\n        isLoading: false,\n        isAnalyzing: true,\n        files: []\n      });\n      let formData = new FormData();\n      formData.append('image', this.state.files[0], this.state.files[0].name);\n      formData.append('e_hr', this.state.e_hr); // add e_hr data to FormData\n      formData.append('e_min', this.state.e_min); // add e_min data to FormData\n      getReqUrlAddress().then(ipAddress => {\n        axios.post(`${ipAddress}/api/images/`, formData, {\n          headers: {\n            'accept': 'application/json',\n            'content-type': 'multipart/form-data',\n          },\n        })\n          .then(resp => {\n            this.getImageResults(resp);\n            console.log(resp.data);\n          })\n          .catch(err => {\n            console.log('Error Message here: ' + err);\n          });\n      });\n    }\n    \n    getImageResults = (object) => {\n      getReqUrlAddress().then(ipAddress => {\n        axios.get(`${ipAddress}/api/images/${object.data.id}/`, {\n          headers: {\n            'accept': 'application/json',\n          },\n        })\n          .then(resp => {\n            this.setState({ recentImage: resp, analyzedInfo: resp.data.analyzed_info });\n            console.log(resp);\n          })\n          .catch(err => {\n            console.log('Error Message here: ' + err);\n          });\n        this.deactivateSpinner();\n      });\n    }\n    \n    showProcessedImage = async () => {\n      const ipAddress = await getReqUrlAddress();\n      axios.get(`${ipAddress}${this.state.recentImage.data.processed_image}`, {\n        headers: {\n          'accept': 'image/png, image/jpeg',\n        },\n        responseType: 'blob',\n      })\n        .then(resp => {\n          this.getImageResults(resp);\n          console.log(resp.data);\n          this.setState({ showProcessedImage: false }); // Add this line to hide the processed image initially\n        })\n        .catch(err => {\n          console.log('Error Message here: ' + err);\n        });\n      this.setState({ showProcessedImage: true });\n    }\n    \n\n    hideProcessedImage = () => {\n        this.setState({ showProcessedImage: false });\n    }\n\n    render() {\n      const { dropzoneDimensions } = this.state;\n      let imageBoxStyle = {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '300px',\n        border: '2px dashed #ccc',\n      };\n      let imageStyle = {\n        maxWidth: dropzoneDimensions.width,\n        maxHeight: dropzoneDimensions.height,\n        objectFit: 'contain',\n      };\n    \n      const files = this.state.files.map((file) => (\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n          <li key={file.name} style={{ margin: 'auto' }}>\n            {file.name} - {file.size} bytes\n          </li>\n        </div>\n      ));\n    \n      return (\n    <React.Fragment>\n      {this.state.recentImage === null && (\n        <div ref={this.dropzoneRef} style={imageBoxStyle}>\n          <div className=\"image-preview\" style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n            {this.state.previewImage ? (\n              <img src={URL.createObjectURL(this.state.previewImage)} alt=\"\" style={imageStyle} />\n            ) : (\n              <Dropzone onDrop={this.onDrop} accept=\"image/png, image/jpeg\">\n                {({ isDragActive, getRootProps, getInputProps }) => (\n                  <div {...getRootProps({ className: 'dropzone back' })} style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n                    <input {...getInputProps()} />\n                    <i className=\"far fa-images mb-2 text-muted\" style={{ fontSize: 100 }}></i>\n                    <p className=\"text-muted\">{isDragActive ? 'Drop some images' : \"Drag 'n' drop some files here, or click to select files\"}</p>\n                  </div>\n                )}\n              </Dropzone>\n            )}\n          </div>\n        </div>\n      )}\n<label htmlFor=\"exposure_time\" className=\"col-form-label\">\n  Exposure Time\n</label>\n<Form>\n  {this.state.recentImage ? null : (\n    <React.Fragment>\n      <div className=\"row justify-content-center\" style={{ marginTop: '5px' }}>\n        <div className=\"col-sm-3\">\n          <input\n            type=\"number\"\n            className=\"form-control\"\n            placeholder=\"\"\n            id=\"exposure_hour\"\n            name=\"e_hr\"\n            value={this.state.e_hr}\n            onChange={this.handleEhrChange}\n            min=\"0\"\n          />\n        </div>\n        <label htmlFor=\"exposure_hour\" className=\"col-form-label\">\n          h\n        </label>\n        <div className=\"col-sm-3\">\n          <input\n            type=\"number\"\n            className=\"form-control\"\n            placeholder=\"\"\n            id=\"exposure_min\"\n            name=\"e_min\"\n            value={this.state.e_min}\n            onChange={this.handleEminChange}\n            min=\"0\"\n          />\n        </div>\n        <label htmlFor=\"exposure_min\" className=\"col-form-label\">\n          m\n        </label>\n      </div>\n    </React.Fragment>\n  )}\n</Form>\n                {this.state.files.length > 0 && (\n                  (this.state.e_hr !== \"\" && this.state.e_min !== \"\")  && (parseInt(this.state.e_hr) >= 0 && parseInt(this.state.e_min) >= 0) && (parseInt(this.state.e_hr) !== 0 || parseInt(this.state.e_min) !== 0) ? (\n                    <Button variant=\"info\" size=\"lg\" className=\"mt-3\" onClick={this.sendImage}>Analyze</Button>\n                  ) : (\n                    <Button variant=\"info\" size=\"lg\" className=\"mt-3\" onClick={this.handleDisabledClick}>Analyze</Button>\n                  )\n                )}\n                {this.state.showMessage && (this.state.e_hr === \"\" || this.state.e_min === \"\") &&\n                    <Alert variant='warning' style={{ marginTop: '13px' }}>Please fill in both 'Exposure Hour' and 'Exposure Minute' fields.</Alert>\n                }\n                {this.state.showMessage && (parseInt(this.state.e_hr) === 0 && parseInt(this.state.e_min) === 0) &&\n                    <Alert variant='warning' style={{ marginTop: '13px' }}>At least one of them should be 1 or greater.</Alert>\n                }\n                {this.state.showMessage && (parseInt(this.state.e_hr) < 0 || parseInt(this.state.e_min) < 0) &&\n                    <Alert variant='warning' style={{ marginTop: '13px' }}>Please enter only non-negative values for 'Exposure Hour' and 'Exposure Minute'.</Alert>\n                }\n                {this.state.isMultipleimages &&\n                    <Alert variant='warning' style={{ marginTop: '13px' }}>Please upload only one image at a time.</Alert>\n                }\n                {this.state.isLoading &&\n                    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\n                        <Spinner animation=\"border\" role=\"status\" style={{ marginTop: '50px' }} />\n                        <div style={{ textAlign: 'center', marginTop: '5px' }}>Loading...</div>\n                    </div>\n                }\n                {this.state.isAnalyzing &&\n                    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\n                        <Spinner animation=\"border\" role=\"status\" style={{ marginTop: '50px' }} />\n                        <div style={{ textAlign: 'center', marginTop: '5px' }}>Analyzing...</div>\n                    </div>\n                }\n                {this.state.recentImage &&\n                  <React.Fragment>\n                    {this.state.recentImage.data.analyzed.includes('Failed') && \n                        <Alert variant='warning' style={{ marginTop: '12px'}}>\n                            <div className=\"auto-line-break analyzed-results\">{this.state.recentImage.data.analyzed}</div>\n                        </Alert>\n                    }\n                    {!this.state.recentImage.data.analyzed.includes('Failed') && Number(this.state.recentImage.data.analyzed) <= 100 ? (\n                        <Alert variant='primary' style={{ marginTop: '12px'}}>\n                            <div className=\"auto-line-break analyzed-results\">Ozone exposure level<br></br><b>{Math.round(this.state.recentImage.data.analyzed)}</b> ppb</div>\n                        </Alert>\n                    ) : !this.state.recentImage.data.analyzed.includes('Failed') && (\n                        <Alert variant='danger' style={{ marginTop: '12px'}}>\n                            <div className=\"auto-line-break analyzed-results\">Ozone exposure level<br></br> <b>{Math.round(this.state.recentImage.data.analyzed)}</b> ppb</div>\n                        </Alert>\n                    )}\n                    {!this.state.recentImage.data.analyzed.includes('Failed') && \n                        <div className=\"circular-progress-bar\" style={{marginTop: '13px !important'}}>\n                          <CircularProgressbar\n                            value={Number(this.state.recentImage.data.analyzed)}\n                            text={\n                              Number(this.state.recentImage.data.analyzed) <= 100 ? 'SAFE' : 'DANGER'\n                            }\n                            styles={buildStyles({\n                              fontSize: '14px',\n                              textColor: Number(this.state.recentImage.data.analyzed) <= 100 ? '#007bff' : '#dc3545',\n                              pathColor: Number(this.state.recentImage.data.analyzed) <= 100 ? '#007bff' : '#dc3545',\n                              trailColor: '#f2f2f2',\n                            })}\n                          >\n                          </CircularProgressbar>\n                        </div>\n                    }\n                  </React.Fragment>\n                    }\n          </React.Fragment>\n        );\n      }\n}\n\nexport default Classifier;\n\n\n// <div className=\"image-container\" style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '20px' }}>\n// {this.state.recentImage && (\n//   <React.Fragment>\n//     {this.state.showProcessedImage ? (\n//       <React.Fragment>                      \n//         <Button style={{ marginTop: '0px', marginBottom: '30px', fontSize: '15px', width: '220px', height: '40px' }} variant=\"primary\" size=\"lg\" className=\"mt-3 mx-auto\" onClick={this.hideProcessedImage}>Hide Processed Image</Button>\n//         <div style={{border: '2px solid #ccc', borderRadius: '4px',padding: '3px',marginTop: '0px', marginBottom: '30px'}}>\n//           <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}><b style={{ color: 'gray' ,fontStyle: 'italic'}}>Processed Data</b>\n//             <Image\n//               className='justify-content-center'\n//               src={this.state.recentImage.data.processed_image}\n//               height='300'\n//               alt=\"File not Loaded\"\n//               rounded\n//               align=\"center\"\n//               style={{ marginTop: '0px', marginBottom: '7px' }}\n//             />\n//             <div className=\"analyzed-info-container\">\n//                 {this.state.analyzedInfo && (\n//                   <div className=\"analyzed-info auto-line-break\" style={{ marginBottom: '0px !important' }}>\n//                     <b style={{ color: 'gray' ,fontStyle: 'italic'}}><p>{this.state.analyzedInfo}</p></b>\n//                   </div>\n//                 )}\n//             </div>\n//           </div>\n//         </div>\n//       </React.Fragment>\n//     ) : (\n//       <Button style={{ marginTop: '0px', marginBottom: '30px', fontSize: '15px', width: '220px', height: '40px' }} variant=\"primary\" size=\"lg\" className=\"mt-3 mx-auto\" onClick={this.showProcessedImage}>Show Processed Image</Button>\n//     )}\n//   </React.Fragment>\n// )}\n// </div> \n// show process image part\n\n// This error is caused by running out of the inotify watches limit. You can fix it by increasing the inotify limit.\n\n// You can try running the following command to temporarily increase the limit:\n\n// Copy code\n// sudo sysctl fs.inotify.max_user_watches=524288\n// If this works, you can make the change permanent by adding the following line to the end of the /etc/sysctl.conf file:\n\n// Copy code\n// fs.inotify.max_user_watches=524288\n// Then, save the file and run the following command to apply the changes:\n\n\n// sudo sysctl -p\n// After this, you should be able to run npm start without encountering the ENOSPC error.","import React from 'react';\n\nconst Image = (props) => {\n    return (\n        <div className=\"image-container\" style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '10px' }}>\n            <div style={{border: '2px solid #ccc', borderRadius: '4px',padding: '3px',marginTop: '0px', marginBottom: '3px'}}>\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                    <b style={{ color: 'gray' ,fontStyle: 'italic'}}>Processed  Image Data #{props.id}</b>\n                    <img\n                        className='justify-content-center'\n                        src={props.pict}\n                        height='300'\n                        rounded\n                        align=\"center\"\n                        style={{ marginTop: '0px', marginBottom: '7px' }}\n                    />\n                    <div className=\"analyzed-info-container\">\n                        {props.analyzedInfo && (\n                            <div className=\"analyzed-info auto-line-break\" style={{ marginBottom: '0px !important' }}>\n                                <b style={{ color: 'gray' ,fontStyle: 'italic'}}><p>{props.analyzedInfo}</p></b>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default Image;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Image from './Image';\nimport { Button, Spinner } from 'react-bootstrap'\nimport { getReqUrlAddress } from '../GetUrl/GetUrl.js';\nimport { alignPropType } from 'react-bootstrap/esm/DropdownMenu';\n\nclass ImageList extends Component {\n    state = {\n        images: [],\n        visible: 2,\n        isLoading: true,\n        newLoaded: false,\n        status: false,\n    }\n\n    componentDidMount() {\n        setTimeout(this.getImages, 1000)\n    }\n\n    getImages = () => {\n        getReqUrlAddress().then(ipAddress => {\n            axios.get(`${ipAddress}/api/images/`, {\n                headers: {\n                    'accept': 'application/json'\n                }\n            }).then(resp => {\n                this.setState({\n                    images: resp.data,\n                    analyzedInfo: resp.data.analyzed_info,\n                    status: true\n                })\n                console.log(resp)\n            })\n            this.setState({ isLoading: false })\n        });\n    }\n    \n    handleVisible = () => {\n        const visible = this.state.visible\n        const new_visible = visible + 2\n        this.setState({ newLoaded: true })\n        setTimeout(() => {\n            this.setState({\n                visible: new_visible,\n                newLoaded: false,\n            })\n        }, 300);\n    }\n\n    render() {\n        const images = this.state.images.slice(0, this.state.visible).map((img, index) => {\n            return <Image key={img.id} pict={img.processed_image} name={img.analyzed} analyzedInfo={img.analyzed_info} id={index + 1} />\n        });\n\n\n        return (\n            <div>\n                <h3> Analysis of images</h3>\n                {(this.state.images.length === 0) && (this.state.status) &&\n                    <h3>No images Analyzed</h3>\n                }\n                {this.state.isLoading ?\n                    <Spinner animation=\"border\" role=\"status\"></Spinner>\n                    :\n                    <React.Fragment>\n                        {images}\n                        {this.state.newLoaded &&\n                            <Spinner animation=\"border\" role=\"status\"></Spinner>}\n                        <br />\n                        {(this.state.images.length > this.state.visible) && (this.state.images.length > 2) &&\n                            <Button clasName=\"mb-5\" variant='primary' size='lg' onClick={this.handleVisible} style={{marginBottom: '20px'}}>Load more</Button>\n                        }\n                        {(this.state.images.length <= this.state.visible) && (this.state.images.length > 0) &&\n                            <p className=\"mb-3\">No more images to load</p>}\n                    </React.Fragment>\n                }\n            </div>\n        );\n    }\n}\n\nexport default ImageList;\n\n\n\n","import React, { createFactory, useState, useEffect } from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport './Navigation.css';\n\nconst Navigation = () => {\n    return (\n            <Navbar bg=\"dark\" variant=\"dark\" className=\"mb-3\">\n                <Navbar.Brand href=\"/home\">RGB Analyzer</Navbar.Brand>\n                <Nav className=\"me-auto\">\n                    <Nav.Link href=\"/home\">Home</Nav.Link>\n                    <Nav.Link href=\"/list\">Analysis History</Nav.Link>\n                </Nav>\n                <div className=\"license\">\n                    <p>&copy; 2023 jaycho@korea.ac.kr. All rights reserved.</p>\n                </div>\n            </Navbar>\n    );\n}\n\nexport default Navigation;\n","import './App.css';\nimport React from 'react';\nimport Classifier from './components/Classifier/Classifier';\nimport ImageList from './components/ImageList/ImageList';\nimport Navigation from './components/Navigation/Navigation';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Navigation />\n      <div className='App'>\n        <Switch>\n          <Route exact path='/main' component={Classifier} />\n          <Route exact path='/list' component={ImageList} />\n          <Route exact path='*' component={Classifier} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}