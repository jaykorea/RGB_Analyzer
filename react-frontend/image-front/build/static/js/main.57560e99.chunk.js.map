{"version":3,"sources":["components/GetUrl/GetUrl.js","components/Classifier/Classifier.js","components/ImageList/Image.js","components/ImageList/ImageList.js","components/Navigation/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["getReqUrlAddress","axios","get","then","response","data","req_url","catch","error","console","log","window","process","_objectSpread","Classifier","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","handleResize","dropzoneRef","current","_this$dropzoneRef$cur","getBoundingClientRect","width","height","setState","dropzoneDimensions","handleEhrChange","event","e_hr","target","value","handleEminChange","e_min","onDrop","files","length","isMultipleimages","isLoading","recentImage","previewImage","loadingImage","setTimeout","showProcessedImage","state","name","analyzingImage","isAnalyzing","activateSpinner","deactivateSpinner","handleDisabledClick","showMessage","sendImage","formData","FormData","append","ipAddress","post","concat","headers","resp","getImageResults","err","object","id","analyzedInfo","analyzed_info","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sent","processed_image","responseType","stop","showAQI","calculateLabelPositions","hideAQI","hideProcessedImage","prevZoomLevel","labelPositions","tickLabelPositions","React","createRef","gaugeWrapperRef","_createClass","key","outerWidth","screen","innerWidth","this","rect","centerX","centerY","radius","map","angle","radians","Math","PI","x","cos","y","sin","radius_t","centerX_t","centerY_y","index","labels","_jsxs","children","_jsx","_this2","setInterval","currentZoomLevel","calculateZoomLevel","addEventListener","_this$dropzoneRef$cur2","bind","removeEventListener","aqiValue","equalSegmentRatio","_this3","imageStyle","maxWidth","maxHeight","objectFit","border","dropzoneStyle","display","justifyContent","alignItems","file","style","margin","size","Fragment","ref","minHeight","marginBottom","className","flexDirection","src","URL","createObjectURL","alt","Dropzone","accept","_ref2","isDragActive","getRootProps","getInputProps","fontSize","Form","marginTop","htmlFor","type","placeholder","onChange","min","parseInt","Button","variant","onClick","Alert","Spinner","animation","role","textAlign","analyzed","includes","CircularProgressbar","Number","text","styles","buildStyles","textColor","pathColor","trailColor","round","GaugeChart","nrOfLevels","colors","arcsLength","percent","getAQIPercent","parseFloat","needleColor","needleBaseColor","arcPadding","cornerRadius","arcWidth","marginInPercent","hideText","animate","animDelay","animateDuration","formatTextValue","aqi","position","left","top","getAQILabel","transform","Component","Image","borderRadius","padding","color","fontStyle","pict","rounded","align","ImageList","_len","arguments","args","Array","_key","apply","images","visible","newLoaded","status","getImages","handleVisible","new_visible","slice","img","clasName","Navigation","Navbar","bg","Brand","href","Nav","Link","App","BrowserRouter","Switch","Route","exact","path","component","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57560e99.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport function getIPv4Address(hostname) {\n    let ip = \"\";\n    const pattern = /^\\d+\\.\\d+\\.\\d+\\.\\d+$/;\n    if (hostname.match(pattern)) {\n        ip = hostname;\n    } else {\n        const regex = /(\\d+\\.\\d+\\.\\d+\\.\\d+)/gm;\n        const match = regex.exec(hostname);\n        if (match && match.length > 1) {\n            ip = match[1];\n        }\n    }\n    return ip;\n}\n\nexport function getReqUrlAddress() {\n    let local_ip=\"http://127.0.0.1:8001\"\n    return axios.get(`/api/get_req_url/`)\n    .then(response => {\n      return response.data.req_url; // change 'ip_address' to 'req_url'\n    })\n    .catch(error => {\n      console.log(error);\n    });\n}\n","import React, { Component, forwardRef, useEffect } from 'react';\nimport Dropzone from 'react-dropzone';\nimport './Classifier.css';\nimport { Alert, Button, Image, Spinner, Form, FormControl, ProgressBar } from 'react-bootstrap';\nimport GaugeChart from 'react-gauge-chart';\nimport axios from 'axios'\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { getReqUrlAddress } from '../GetUrl/GetUrl';\nwindow.process = { ...window.process }\n\nclass Classifier extends Component {\n  \n  constructor(props) {\n    super(props);  \n    this.state = {\n        prevZoomLevel: 1,\n        files: [],\n        isLoading: false,\n        isAnalyzing: false,\n        recentImage: null,\n        previewImage: null,\n        e_hr: '', // add state variable for e_hr\n        e_min: '', // add state variable for e_min\n        showMessage: false,\n        isMultipleimages: false,\n        showProcessedImage: false,\n        showAQI: false,\n        analyzedInfo: null,\n        dropzoneDimensions: {\n          width: 0,\n          height: 0,\n        },\n        labelPositions:[],\n        tickLabelPositions:[],\n      };\n      this.dropzoneRef = React.createRef();\n      this.gaugeWrapperRef = React.createRef();\n    }\n\n    calculateZoomLevel() {\n      const zoomLevel = (window.outerWidth / window.screen.width) * (window.innerWidth / window.outerWidth);\n      return zoomLevel;\n    }\n\n    calculateLabelPositions() {\n      const gaugeWrapperRef = this.gaugeWrapperRef.current;\n      if (!gaugeWrapperRef) return;\n    \n      const rect = gaugeWrapperRef.getBoundingClientRect();\n      const centerX = (rect.width / 2.2) ;\n      const centerY = rect.height * 0.89;\n      const radius = centerX * 0.7; // Adjust this value to match the actual gauge chart radius\n    \n      const angles = [-165, -135, -105, -75, -45, -15];\n      const labelPositions = angles.map((angle) => {\n        const radians = (angle * Math.PI) / 180;\n        const x = centerX + radius * Math.cos(radians);\n        const y = centerY + radius * Math.sin(radians);\n        return { x, y };\n      });\n      const tickAngles = [-180, -150, -120, -90, -60, -30, 0];\n      const tickLabelPositions = tickAngles.map((angle) => {\n        const radius_t = (radius)*1.36;\n        const centerX_t = (centerX)*0.97;\n        const centerY_y = (centerY)*0.4;\n        const radians = (angle * Math.PI) / 180;\n        const x = centerX_t + (radius_t) * Math.cos(radians) ;\n        const y = centerY_y + (radius_t) * Math.sin(radians);\n        return { x, y };\n      });\n    \n      this.setState({ labelPositions, tickLabelPositions });\n    }\n\n    getAQILabel(index) {\n\n      const labels = [\n        'Good',\n        'Moderate',\n        <span>\n        Unhealthy for<br />Sensitive<br />Groups\n        </span>,\n        'Unhealthy',\n        <span>\n        Very<br />Unhealthy\n        </span>,\n        'Hazardous',\n      ];\n\n      switch (index) {\n        case 0:\n          return labels[0];\n        case 1:\n          return labels[1];\n        case 2:\n          return labels[2];\n        case 3:\n          return labels[3];\n        case 4:\n          return labels[4];\n        case 5:\n          return labels[5];\n        default:\n          return 'None';\n      }\n    }\n\n    getAQILabelIndex(index) {\n\n      const labels = [\n        '0',\n        '50',\n        '100',\n        '150',\n        '200',\n        '300',\n        '500',\n      ];\n      switch (index) {\n        case 0:\n          return labels[0];\n        case 1:\n          return labels[1];\n        case 2:\n          return labels[2];\n        case 3:\n          return labels[3];\n        case 4:\n          return labels[4];\n        case 5:\n          return labels[5];\n        default:\n          return 'None';\n      }\n    }\n    \n    componentDidMount() {\n      // Set up an interval to check for zoom level changes\n      setInterval(() => {\n        const currentZoomLevel = this.calculateZoomLevel();\n        if (currentZoomLevel !== this.state.prevZoomLevel) {\n          this.calculateLabelPositions();\n          this.setState({ prevZoomLevel: currentZoomLevel });\n        }\n      }, 50); // Check every 500ms\n\n      // Add a resize event listener to the window\n      window.addEventListener('resize', this.handleResize);\n      // Get the initial dimensions of the dropzone\n      const { width, height } = this.dropzoneRef.current.getBoundingClientRect();\n      // Get the initial label positions\n      this.calculateLabelPositions();\n      window.addEventListener('resize', this.calculateLabelPositions.bind(this));\n\n      this.setState({ dropzoneDimensions: { width, height } });\n    }\n  \n    componentWillUnmount() {\n      // Remove the resize event listener when the component unmounts\n      window.removeEventListener('resize', this.handleResize);\n      // Remove the resize event listener when the component unmounts\n      window.removeEventListener('resize', this.calculateLabelPositions.bind(this));\n    }\n  \n    handleResize = () => {\n      // Update the dimensions of the dropzone when the window resizes\n      if (this.dropzoneRef.current) {\n        const { width, height } = this.dropzoneRef.current.getBoundingClientRect();\n        this.setState({ dropzoneDimensions: { width, height } });\n      }\n    };\n\n    // event handler for e_hr input field\n    handleEhrChange = (event) => {\n        this.setState({ e_hr: event.target.value });\n    }\n\n    // event handler for e_min input field\n    handleEminChange = (event) => {\n        this.setState({ e_min: event.target.value });\n    }\n\n    onDrop = (files) => {\n        if (files.length > 1) {\n            this.setState({ isMultipleimages: true });\n            return;\n        }\n        this.setState({\n            isLoading: true,\n            files: [],\n            recentImage: null,\n            previewImage: files[0],\n            isMultipleimages: false, // Reset the state when a single image is uploaded\n        })\n        this.loadingImage(files)\n    }\n\n    loadingImage = (files) => {\n        setTimeout(() => {\n            this.setState({\n                files,\n                isLoading: false,\n                showProcessedImage: false\n            }, () => {\n                console.log(this.state.files[0].name)\n            })\n        }, 1000);\n    }\n    analyzingImage = () => {\n        setTimeout(() => {\n            this.setState({\n                isAnalyzing: false\n            }, () => {\n                console.log(this.state.files[0].name)\n            })\n        }, 1000);\n    }\n    activateSpinner = () => {\n        this.setState({\n            isLoading: true,\n            isAnalyzing: true,\n            files: []\n        })\n    }\n\n    deactivateSpinner = () => {\n        this.setState({\n            isLoading: false,\n            isAnalyzing: false,\n        })\n    }\n\n    handleDisabledClick = () => {\n        this.setState({ showMessage: true });\n        // setTimeout(() => {\n        //     this.setState({ showMessage: false });\n        // }, 1000); // Show the message for 3 seconds\n    }\n\n    sendImage = () => {\n      this.setState({\n        isLoading: false,\n        isAnalyzing: true,\n        files: []\n      });\n      let formData = new FormData();\n      formData.append('image', this.state.files[0], this.state.files[0].name);\n      formData.append('e_hr', this.state.e_hr); // add e_hr data to FormData\n      formData.append('e_min', this.state.e_min); // add e_min data to FormData\n      getReqUrlAddress().then(ipAddress => {\n        axios.post(`${ipAddress}/api/images/`, formData, {\n          headers: {\n            'accept': 'application/json',\n            'content-type': 'multipart/form-data',\n          },\n        })\n          .then(resp => {\n            this.getImageResults(resp);\n            console.log(resp.data);\n          })\n          .catch(err => {\n            console.log('Error Message here: ' + err);\n          });\n      });\n    }\n    \n    getImageResults = (object) => {\n      getReqUrlAddress().then(ipAddress => {\n        axios.get(`${ipAddress}/api/images/${object.data.id}/`, {\n          headers: {\n            'accept': 'application/json',\n          },\n        })\n          .then(resp => {\n            this.setState({ recentImage: resp, analyzedInfo: resp.data.analyzed_info });\n            console.log(resp);\n          })\n          .catch(err => {\n            console.log('Error Message here: ' + err);\n          });\n        this.deactivateSpinner();\n      });\n    }\n    \n    showProcessedImage = async () => {\n      const ipAddress = await getReqUrlAddress();\n      axios.get(`${ipAddress}${this.state.recentImage.data.processed_image}`, {\n        headers: {\n          'accept': 'image/png, image/jpeg',\n        },\n        responseType: 'blob',\n      })\n        .then(resp => {\n          this.getImageResults(resp);\n          console.log(resp.data);\n          this.setState({ showProcessedImage: false }); // Add this line to hide the processed image initially\n        })\n        .catch(err => {\n          console.log('Error Message here: ' + err);\n        });\n      this.setState({ showProcessedImage: true });\n    }\n\n    showAQI = () => {\n      this.setState({ showAQI: true });\n      setTimeout(() => {\n        this.calculateLabelPositions();\n      }, 1);\n  }\n   \n    hideAQI = () => {\n      this.setState({ showAQI: false });\n  }\n\n    hideProcessedImage = () => {\n        this.setState({ showProcessedImage: false });\n    }\n\n    getAQIPercent(aqiValue) {\n      const equalSegmentRatio = 1 / 6; // 0.166\n    \n      if (aqiValue <= 50) {\n        return aqiValue / 50 * equalSegmentRatio;\n      } else if (aqiValue <= 100) {\n        return equalSegmentRatio + (aqiValue - 50) / 50 * equalSegmentRatio;\n      } else if (aqiValue <= 150) {\n        return equalSegmentRatio * 2 + (aqiValue - 100) / 50 * equalSegmentRatio;\n      } else if (aqiValue <= 200) {\n        return equalSegmentRatio * 3 + (aqiValue - 150) / 50 * equalSegmentRatio;\n      } else if (aqiValue <= 300) {\n        return equalSegmentRatio * 4 + (aqiValue - 200) / 100 * equalSegmentRatio;\n      } else {\n        return equalSegmentRatio * 5 + (aqiValue - 300) / 200 * equalSegmentRatio;\n      }\n    }\n\n    render() {\n      const { dropzoneDimensions } = this.state;\n      let imageBoxStyle = {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: '330px',\n        marginBottom: '15px',\n      };\n      let imageStyle = {\n        maxWidth: `${dropzoneDimensions.width * 0.99}px`,\n        maxHeight: `${dropzoneDimensions.height * 0.9}px`,\n        objectFit: 'contain',\n        border: '1px dashed #ccc',\n      };\n      let dropzoneStyle = {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: `${dropzoneDimensions.width}px`,\n        maxHeight: '330px', // set a max-height here\n      };\n    \n      const files = this.state.files.map((file) => (\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n          <li key={file.name} style={{ margin: 'auto' }}>\n            {file.name} - {file.size} bytes\n          </li>\n        </div>\n      ));\n      \n      return (\n    <React.Fragment>\n      {this.state.recentImage === null && (\n        <div ref={this.dropzoneRef} style={imageBoxStyle}>\n          <div className=\"image-preview\" style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n            {this.state.previewImage ? (\n              <img src={URL.createObjectURL(this.state.previewImage)} alt=\"\" style={imageStyle} />\n            ) : (\n              <Dropzone onDrop={this.onDrop} accept=\"image/png, image/jpeg\">\n                {({ isDragActive, getRootProps, getInputProps }) => (\n                  <div {...getRootProps({ className: 'dropzone back' })} style={{ ...dropzoneStyle, display: 'flex', justifyContent: 'center', flexDirection: 'column', alignItems: 'center' }}>\n                    <input {...getInputProps()} />\n                    <i className=\"fa fa-cloud-upload fa-4x text-muted\" style={{ fontSize: 120 }}></i>\n                    <p className=\"text-muted\">{isDragActive ? 'Drop some images' : \"Drag 'n' drop some files here, or click to select files\"}</p>\n                  </div>\n                )}\n              </Dropzone>\n            )}\n          </div>\n        </div>\n      )}\n              <Form>\n                {this.state.recentImage ? null : (\n                  <React.Fragment>\n                <div className=\"row justify-content-center\" style={{ marginTop: '5px' }}>\n                  <label htmlFor=\"exposure_time\" className=\"col-form-label\">\n                    Exposure Time:\n                  </label>\n                <div className=\"col-sm-2 col-md-4\">\n                  <input\n                    type=\"number\"\n                    className=\"form-control\"\n                    placeholder=\"\"\n                    id=\"exposure_hour\"\n                    name=\"e_hr\"\n                    value={this.state.e_hr}\n                    onChange={this.handleEhrChange}\n                    min=\"0\"\n                    style={{ width: '100%' }}\n                  />\n                </div>\n                <label htmlFor=\"exposure_hour\" className=\"col-form-label\">\n                  hr\n                </label>\n                <div className=\"col-sm-2 col-md-4\">\n                  <input\n                    type=\"number\"\n                    className=\"form-control\"\n                    placeholder=\"\"\n                    id=\"exposure_min\"\n                    name=\"e_min\"\n                    value={this.state.e_min}\n                    onChange={this.handleEminChange}\n                    min=\"0\"\n                    style={{ width: '100%' }}\n                  />\n                </div>\n                <label htmlFor=\"exposure_min\" className=\"col-form-label\" >\n                  min\n                </label>\n              </div>\n                  </React.Fragment>\n                )}\n              </Form>\n                {this.state.files.length > 0 && (\n                  (this.state.e_hr !== \"\" && this.state.e_min !== \"\")  && (parseInt(this.state.e_hr) >= 0 && parseInt(this.state.e_min) >= 0) && (parseInt(this.state.e_hr) !== 0 || parseInt(this.state.e_min) !== 0) ? (\n                    <Button variant=\"info\" size=\"lg\" className=\"analyze-button\" onClick={this.sendImage}>Analyze</Button>\n                  ) : (\n                    <Button variant=\"info\" size=\"lg\" className=\"analyze-button\" onClick={this.handleDisabledClick}>Analyze</Button>\n                  )\n                )}\n                {this.state.showMessage && (this.state.e_hr === \"\" || this.state.e_min === \"\") &&\n                    <Alert variant='warning' style={{ marginTop: '13px' }}>Please fill in both 'Exposure Hour' and 'Exposure Minute' fields.</Alert>\n                }\n                {this.state.showMessage && (parseInt(this.state.e_hr) === 0 && parseInt(this.state.e_min) === 0) &&\n                    <Alert variant='warning' style={{ marginTop: '13px' }}>At least one of them should be 1 or greater.</Alert>\n                }\n                {this.state.showMessage && (parseInt(this.state.e_hr) < 0 || parseInt(this.state.e_min) < 0) &&\n                    <Alert variant='warning' style={{ marginTop: '13px' }}>Please enter only non-negative values for 'Exposure Hour' and 'Exposure Minute'.</Alert>\n                }\n                {this.state.isMultipleimages &&\n                    <Alert variant='warning' style={{ marginTop: '13px' }}>Please upload only one image at a time.</Alert>\n                }\n                {this.state.isLoading &&\n                    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\n                        <Spinner animation=\"border\" role=\"status\" style={{ marginTop: '50px' }} />\n                        <div style={{ textAlign: 'center', marginTop: '5px' }}>Loading...</div>\n                    </div>\n                }\n                {this.state.isAnalyzing &&\n                    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\n                        <Spinner animation=\"border\" role=\"status\" style={{ marginTop: '50px' }} />\n                        <div style={{ textAlign: 'center', marginTop: '5px' }}>Analyzing...</div>\n                    </div>\n                }\n                {this.state.recentImage &&\n                  <React.Fragment>\n                    {!this.state.recentImage.data.analyzed.includes('Failed') && \n                      <div className=\"circular-progress-container\">\n                        <div className=\"circular-progress-bar\" style={{marginTop: '13px !important'}}>\n                          <CircularProgressbar\n                            value={Number(this.state.recentImage.data.analyzed)}\n                            text={\n                              Number(this.state.recentImage.data.analyzed) < 100.0 ? 'SAFE' : 'DANGER'\n                            }\n                            styles={buildStyles({\n                              fontSize: '14px',\n                              textColor: Number(this.state.recentImage.data.analyzed) < 100.0 ? '#007bff' : '#dc3545',\n                              pathColor: Number(this.state.recentImage.data.analyzed) < 100.0 ? '#007bff' : '#dc3545',\n                              trailColor: '#f2f2f2',\n                            })}\n                          >\n                          </CircularProgressbar>\n                        </div>\n                      </div>\n                    }\n                    {this.state.recentImage.data.analyzed.includes('Failed') && \n                        <Alert variant='warning' style={{ marginTop: '50px'}}>\n                            <div className=\"auto-line-break analyzed-results\">{this.state.recentImage.data.analyzed}</div>\n                        </Alert>\n                    }\n                    {!this.state.recentImage.data.analyzed.includes('Failed') && Number(this.state.recentImage.data.analyzed) < 100.0 ? (\n                        <Alert variant='primary' className=\"custom-alert\" style={{ marginTop: '40px'}}>\n                            <div className=\"auto-line-break analyzed-results\">Ozone exposure level<br></br><b>{Math.round(this.state.recentImage.data.analyzed)}</b> ppb</div>\n                        </Alert>\n                    ) : !this.state.recentImage.data.analyzed.includes('Failed') && (\n                        <Alert variant='danger' className=\"custom-alert\" style={{ marginTop: '40px'}}>\n                            <div className=\"auto-line-break analyzed-results\">Ozone exposure level<br></br> <b>{Math.round(this.state.recentImage.data.analyzed)}</b> ppb</div>\n                        </Alert>\n                    )}\n                     {this.state.recentImage && (\n                        <React.Fragment>\n                          {this.state.showAQI ? (\n                            <React.Fragment>                      \n                              <Button style={{ marginTop: '0px', marginBottom: '50px', fontSize: '15px', width: '150px', height: '40px' }} variant=\"primary\" size=\"lg\" className=\"mt-3 mx-auto\" onClick={this.hideAQI}>AQI</Button>\n                              <div ref={this.gaugeWrapperRef}>\n                              <div className=\"aqi-gauge-container\" style={{marginBottom: '40px'}}> \n                              <GaugeChart\n                                id=\"gauge-chart\"\n                                nrOfLevels={6}\n                                colors={['#00FF00', '#FFFF00', '#FFA500', '#FF4500', '#B70000', '#7C0A02']}\n                                arcsLength={[0.166, 0.166, 0.166, 0.166, 0.166, 0.166]}\n                                percent={this.getAQIPercent(Number.parseFloat(this.state.recentImage.data.analyzed))}\n                                textColor=\"#000000\"\n                                needleColor=\"#e4e4e4\"\n                                needleBaseColor=\"#d7d7d7\"\n                                arcPadding={0.01}\n                                cornerRadius={0.5}\n                                arcWidth={0.35}\n                                marginInPercent={0.035}\n                                hideText={true}\n                                animate={false}\n                                animDelay={500}\n                                animateDuration={1000}\n                                formatTextValue={(value) => {\n                                  console.log('Received value:', value);\n                                  const aqi = Number(this.state.recentImage.data.analyzed);\n                                  if (aqi > 0 && aqi <= 50) return 'Good';\n                                  else if (aqi > 50 && aqi <= 100) return 'Moderate';\n                                  else if (aqi > 100 && aqi <= 150) return 'Unhealthy for Sensitive Groups';\n                                  else if (aqi > 150 && aqi <= 200) return 'Unhealthy';\n                                  else if (aqi > 200 && aqi <= 300) return 'Very Unhealthy';\n                                  else if (aqi > 300 && aqi <= 500) return 'Hazardous';\n                                  else return 'None';\n                                }}\n                              />\n                                <div className=\"aqi-gauge-labels\">\n                                  {this.state.labelPositions.map((position, index) => (\n                                    <div\n                                      key={index}\n                                      className={`aqi-gauge-label aqi-gauge-label-${index}`}\n                                      style={{\n                                        position: 'absolute',\n                                        left: position.x,\n                                        top: position.y,\n                                      }}\n                                    >\n                                      <span>{this.getAQILabel(index)}</span>\n                                    </div>\n                                  ))}\n                                </div>\n                                <div className=\"aqi-gauge-labels\">\n                                  {this.state.tickLabelPositions.map((position, index) => (\n                                    <div\n                                      key={index}\n                                      className={`aqi-gauge-tick-label aqi-gauge-tick-label-${index}`}\n                                      style={{\n                                        transform: `translate(${position.x}px, ${position.y}px)`,\n                                      }}\n                                    >\n                                      <span>{[0, 50, 100, 150, 200, 300, 500][index]}</span>\n                                    </div>\n                                  ))}\n                                </div>\n                              </div>\n                            </div>\n                            </React.Fragment>\n                          ) : (\n                            <Button style={{ marginTop: '0px', marginBottom: '50px', fontSize: '15px', width: '150px', height: '40px' }} variant=\"primary\" size=\"lg\" className=\"mt-3 mx-auto\" onClick={this.showAQI}>AQI</Button>\n                          )}\n                        </React.Fragment>\n                      )}\n                      \n                  </React.Fragment>\n                    }\n          </React.Fragment>\n        );\n      }\n}\n\nexport default Classifier;\n\n// Number(this.state.recentImage.data.analyzed) <- PPB * (T/8)\n// <div className=\"image-container\" style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '20px' }}>\n// {this.state.recentImage && (\n//   <React.Fragment>\n//     {this.state.showProcessedImage ? (\n//       <React.Fragment>                      \n//         <Button style={{ marginTop: '0px', marginBottom: '30px', fontSize: '15px', width: '220px', height: '40px' }} variant=\"primary\" size=\"lg\" className=\"mt-3 mx-auto\" onClick={this.hideProcessedImage}>Hide Processed Image</Button>\n//         <div style={{border: '2px solid #ccc', borderRadius: '4px',padding: '3px',marginTop: '0px', marginBottom: '30px'}}>\n//           <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}><b style={{ color: 'gray' ,fontStyle: 'italic'}}>Processed Data</b>\n//             <Image\n//               className='justify-content-center'\n//               src={this.state.recentImage.data.processed_image}\n//               height='300'\n//               alt=\"File not Loaded\"\n//               rounded\n//               align=\"center\"\n//               style={{ marginTop: '0px', marginBottom: '7px' }}\n//             />\n//             <div className=\"analyzed-info-container\">\n//                 {this.state.analyzedInfo && (\n//                   <div className=\"analyzed-info auto-line-break\" style={{ marginBottom: '0px !important' }}>\n//                     <b style={{ color: 'gray' ,fontStyle: 'italic'}}><p>{this.state.analyzedInfo}</p></b>\n//                   </div>\n//                 )}\n//             </div>\n//           </div>\n//         </div>\n//       </React.Fragment>\n//     ) : (\n//       <Button style={{ marginTop: '0px', marginBottom: '30px', fontSize: '15px', width: '220px', height: '40px' }} variant=\"primary\" size=\"lg\" className=\"mt-3 mx-auto\" onClick={this.showProcessedImage}>Show Processed Image</Button>\n//     )}\n//   </React.Fragment>\n// )}\n// </div> \n// show process image part\n\n// This error is caused by running out of the inotify watches limit. You can fix it by increasing the inotify limit.\n\n// You can try running the following command to temporarily increase the limit:\n\n// Copy code\n// sudo sysctl fs.inotify.max_user_watches=524288\n// If this works, you can make the change permanent by adding the following line to the end of the /etc/sysctl.conf file:\n\n// Copy code\n// fs.inotify.max_user_watches=524288\n// Then, save the file and run the following command to apply the changes:\n\n\n// sudo sysctl -p\n// After this, you should be able to run npm start without encountering the ENOSPC error.","import React from 'react';\n\nconst Image = (props) => {\n    return (\n        <div className=\"image-container\" style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '10px' }}>\n            <div style={{border: '2px solid #ccc', borderRadius: '4px',padding: '3px',marginTop: '0px', marginBottom: '3px'}}>\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                    <b style={{ color: 'gray' ,fontStyle: 'italic'}}>Processed  Image Data #{props.id}</b>\n                    <img\n                        className='justify-content-center'\n                        src={props.pict}\n                        height='300'\n                        rounded\n                        align=\"center\"\n                        style={{ marginTop: '0px', marginBottom: '7px' }}\n                    />\n                    <div className=\"analyzed-info-container\">\n                        {props.analyzedInfo && (\n                            <div className=\"analyzed-info auto-line-break\" style={{ marginBottom: '0px !important' }}>\n                                <b style={{ color: 'gray' ,fontStyle: 'italic'}}><p>{props.analyzedInfo}</p></b>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default Image;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Image from './Image';\nimport { Button, Spinner } from 'react-bootstrap'\nimport { getReqUrlAddress } from '../GetUrl/GetUrl.js';\nimport { alignPropType } from 'react-bootstrap/esm/DropdownMenu';\n\nclass ImageList extends Component {\n    state = {\n        images: [],\n        visible: 2,\n        isLoading: true,\n        newLoaded: false,\n        status: false,\n    }\n\n    componentDidMount() {\n        setTimeout(this.getImages, 1000)\n    }\n\n    getImages = () => {\n        getReqUrlAddress().then(ipAddress => {\n            axios.get(`${ipAddress}/api/images/`, {\n                headers: {\n                    'accept': 'application/json'\n                }\n            }).then(resp => {\n                this.setState({\n                    images: resp.data,\n                    analyzedInfo: resp.data.analyzed_info,\n                    status: true\n                })\n                console.log(resp)\n            })\n            this.setState({ isLoading: false })\n        });\n    }\n    \n    handleVisible = () => {\n        const visible = this.state.visible\n        const new_visible = visible + 2\n        this.setState({ newLoaded: true })\n        setTimeout(() => {\n            this.setState({\n                visible: new_visible,\n                newLoaded: false,\n            })\n        }, 300);\n    }\n\n    render() {\n        const images = this.state.images.slice(0, this.state.visible).map((img, index) => {\n            return <Image key={img.id} pict={img.processed_image} name={img.analyzed} analyzedInfo={img.analyzed_info} id={index + 1} />\n        });\n\n\n        return (\n            <div>\n                <h3> Analysis of images</h3>\n                {(this.state.images.length === 0) && (this.state.status) &&\n                    <h3>No images Analyzed</h3>\n                }\n                {this.state.isLoading ?\n                    <Spinner animation=\"border\" role=\"status\"></Spinner>\n                    :\n                    <React.Fragment>\n                        {images}\n                        {this.state.newLoaded &&\n                            <Spinner animation=\"border\" role=\"status\"></Spinner>}\n                        <br />\n                        {(this.state.images.length > this.state.visible) && (this.state.images.length > 2) &&\n                            <Button clasName=\"mb-5\" variant='primary' size='lg' onClick={this.handleVisible} style={{marginBottom: '20px'}}>Load more</Button>\n                        }\n                        {(this.state.images.length <= this.state.visible) && (this.state.images.length > 0) &&\n                            <p className=\"mb-3\">No more images to load</p>}\n                    </React.Fragment>\n                }\n            </div>\n        );\n    }\n}\n\nexport default ImageList;\n\n\n\n","import React, { createFactory, useState, useEffect } from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport './Navigation.css';\n\nconst Navigation = () => {\n    return (\n            <Navbar bg=\"dark\" variant=\"dark\" className=\"mb-3\">\n                <Navbar.Brand href=\"/home\">RGB Analyzer</Navbar.Brand>\n                <Nav className=\"me-auto\">\n                    <Nav.Link href=\"/home\">Home</Nav.Link>\n                    <Nav.Link href=\"/list\">Analysis History</Nav.Link>\n                </Nav>\n                <div className=\"license\">\n                    <p>&copy; 2023 jaycho@korea.ac.kr. All rights reserved.</p>\n                </div>\n            </Navbar>\n    );\n}\n\nexport default Navigation;\n","import './App.css';\nimport React from 'react';\nimport Classifier from './components/Classifier/Classifier';\nimport ImageList from './components/ImageList/ImageList';\nimport Navigation from './components/Navigation/Navigation';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Navigation />\n      <div className='App'>\n        <Switch>\n          <Route exact path='/main' component={Classifier} />\n          <Route exact path='/list' component={ImageList} />\n          <Route exact path='*' component={Classifier} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}